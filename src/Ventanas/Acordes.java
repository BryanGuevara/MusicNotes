/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventanas;

import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;

/**
 *
 * @author MINEDUCYT
 */
public class Acordes extends javax.swing.JFrame {

    /**
     * Creates new form Acordes
     */
    public Acordes() {
        initComponents();

        setSize(750, 500);
        setResizable(false);
        setTitle(" Galeria de Acordes");
        this.setLocationRelativeTo(null);
    }
    
@Override
public Image getIconImage() {
    URL resourceUrl = ClassLoader.getSystemResource("img/icono.png");
    if (resourceUrl != null) {
        Image retValue = Toolkit.getDefaultToolkit().getImage(resourceUrl);
        return retValue;
    } else {
        System.err.println("No se pudo encontrar el recurso 'icono.png'");
        return null;
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DO1 = new javax.swing.JLabel();
        RE1 = new javax.swing.JLabel();
        MI1 = new javax.swing.JLabel();
        LA1 = new javax.swing.JLabel();
        SOL1 = new javax.swing.JLabel();
        FA1 = new javax.swing.JLabel();
        SI1 = new javax.swing.JLabel();
        SI2 = new javax.swing.JLabel();
        LA2 = new javax.swing.JLabel();
        SOL2 = new javax.swing.JLabel();
        FA2 = new javax.swing.JLabel();
        MI2 = new javax.swing.JLabel();
        RE2 = new javax.swing.JLabel();
        DO2 = new javax.swing.JLabel();
        DO3 = new javax.swing.JLabel();
        RE3 = new javax.swing.JLabel();
        MI3 = new javax.swing.JLabel();
        LASos1 = new javax.swing.JLabel();
        SOLSos1 = new javax.swing.JLabel();
        FASos1 = new javax.swing.JLabel();
        RESos1 = new javax.swing.JLabel();
        DOSos1 = new javax.swing.JLabel();
        LASos2 = new javax.swing.JLabel();
        DOSos2 = new javax.swing.JLabel();
        FASos2 = new javax.swing.JLabel();
        SOLSos2 = new javax.swing.JLabel();
        RESos2 = new javax.swing.JLabel();
        RESos3 = new javax.swing.JLabel();
        DOSos3 = new javax.swing.JLabel();
        CmbAcorde = new javax.swing.JComboBox<>();
        CmbFamilia = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        SI3 = new javax.swing.JLabel();
        FA3 = new javax.swing.JLabel();
        SOL3 = new javax.swing.JLabel();
        LA3 = new javax.swing.JLabel();
        LASos3 = new javax.swing.JLabel();
        SOLSos3 = new javax.swing.JLabel();
        FASos3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        LabelAcorde = new javax.swing.JLabel();
        LabelAcordeName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(getIconImage());

        DO1.setBackground(new java.awt.Color(255, 255, 255));
        DO1.setForeground(new java.awt.Color(0, 0, 0));
        DO1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DO1.setText("C");
        DO1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RE1.setBackground(new java.awt.Color(255, 255, 255));
        RE1.setForeground(new java.awt.Color(0, 0, 0));
        RE1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RE1.setText("D");
        RE1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        MI1.setBackground(new java.awt.Color(255, 255, 255));
        MI1.setForeground(new java.awt.Color(0, 0, 0));
        MI1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MI1.setText("E");
        MI1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        LA1.setBackground(new java.awt.Color(255, 255, 255));
        LA1.setForeground(new java.awt.Color(0, 0, 0));
        LA1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LA1.setText("A");
        LA1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SOL1.setBackground(new java.awt.Color(255, 255, 255));
        SOL1.setForeground(new java.awt.Color(0, 0, 0));
        SOL1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SOL1.setText("G");
        SOL1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        FA1.setBackground(new java.awt.Color(255, 255, 255));
        FA1.setForeground(new java.awt.Color(0, 0, 0));
        FA1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FA1.setText("F");
        FA1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SI1.setBackground(new java.awt.Color(255, 255, 255));
        SI1.setForeground(new java.awt.Color(0, 0, 0));
        SI1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SI1.setText("B");
        SI1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SI2.setBackground(new java.awt.Color(255, 255, 255));
        SI2.setForeground(new java.awt.Color(0, 0, 0));
        SI2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SI2.setText("B");
        SI2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        LA2.setBackground(new java.awt.Color(255, 255, 255));
        LA2.setForeground(new java.awt.Color(0, 0, 0));
        LA2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LA2.setText("A");
        LA2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SOL2.setBackground(new java.awt.Color(255, 255, 255));
        SOL2.setForeground(new java.awt.Color(0, 0, 0));
        SOL2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SOL2.setText("G");
        SOL2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        FA2.setBackground(new java.awt.Color(255, 255, 255));
        FA2.setForeground(new java.awt.Color(0, 0, 0));
        FA2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FA2.setText("F");
        FA2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        MI2.setBackground(new java.awt.Color(255, 255, 255));
        MI2.setForeground(new java.awt.Color(0, 0, 0));
        MI2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MI2.setText("E");
        MI2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RE2.setBackground(new java.awt.Color(255, 255, 255));
        RE2.setForeground(new java.awt.Color(0, 0, 0));
        RE2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RE2.setText("D");
        RE2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        DO2.setBackground(new java.awt.Color(255, 255, 255));
        DO2.setForeground(new java.awt.Color(0, 0, 0));
        DO2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DO2.setText("C");
        DO2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        DO3.setBackground(new java.awt.Color(255, 255, 255));
        DO3.setForeground(new java.awt.Color(0, 0, 0));
        DO3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DO3.setText("C");
        DO3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RE3.setBackground(new java.awt.Color(255, 255, 255));
        RE3.setForeground(new java.awt.Color(0, 0, 0));
        RE3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RE3.setText("D");
        RE3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        MI3.setBackground(new java.awt.Color(255, 255, 255));
        MI3.setForeground(new java.awt.Color(0, 0, 0));
        MI3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MI3.setText("E");
        MI3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        LASos1.setBackground(new java.awt.Color(0, 0, 0));
        LASos1.setForeground(new java.awt.Color(0, 0, 0));
        LASos1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LASos1.setText("A#");
        LASos1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SOLSos1.setBackground(new java.awt.Color(0, 0, 0));
        SOLSos1.setForeground(new java.awt.Color(0, 0, 0));
        SOLSos1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SOLSos1.setText("G#");
        SOLSos1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        FASos1.setBackground(new java.awt.Color(0, 0, 0));
        FASos1.setForeground(new java.awt.Color(0, 0, 0));
        FASos1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FASos1.setText("F#");
        FASos1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RESos1.setBackground(new java.awt.Color(0, 0, 0));
        RESos1.setForeground(new java.awt.Color(0, 0, 0));
        RESos1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RESos1.setText("D#");
        RESos1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        DOSos1.setBackground(new java.awt.Color(0, 0, 0));
        DOSos1.setForeground(new java.awt.Color(0, 0, 0));
        DOSos1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DOSos1.setText("C#");
        DOSos1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        LASos2.setBackground(new java.awt.Color(0, 0, 0));
        LASos2.setForeground(new java.awt.Color(0, 0, 0));
        LASos2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LASos2.setText("A#");
        LASos2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        DOSos2.setBackground(new java.awt.Color(0, 0, 0));
        DOSos2.setForeground(new java.awt.Color(0, 0, 0));
        DOSos2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DOSos2.setText("C#");
        DOSos2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        FASos2.setBackground(new java.awt.Color(0, 0, 0));
        FASos2.setForeground(new java.awt.Color(0, 0, 0));
        FASos2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FASos2.setText("F#");
        FASos2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SOLSos2.setBackground(new java.awt.Color(0, 0, 0));
        SOLSos2.setForeground(new java.awt.Color(0, 0, 0));
        SOLSos2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SOLSos2.setText("G#");
        SOLSos2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RESos2.setBackground(new java.awt.Color(0, 0, 0));
        RESos2.setForeground(new java.awt.Color(0, 0, 0));
        RESos2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RESos2.setText("D#");
        RESos2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        RESos3.setBackground(new java.awt.Color(0, 0, 0));
        RESos3.setForeground(new java.awt.Color(0, 0, 0));
        RESos3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RESos3.setText("D#");
        RESos3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        DOSos3.setBackground(new java.awt.Color(0, 0, 0));
        DOSos3.setForeground(new java.awt.Color(0, 0, 0));
        DOSos3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DOSos3.setText("C#");
        DOSos3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        CmbAcorde.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DO", "DO#", "RE", "RE#", "MI", "FA", "FA#", "SOL", "SOL#", "LA", "LA#", "SI" }));

        CmbFamilia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mayor", "Menor", "Quinta", "Sus2", "Sus4", "Aumentado", "Disminuido", "Séptima", "Octava", "Novena", "Maj6", "Maj7", "Maj9", "Maj11", "Maj13" }));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("C = DO");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("D = RE");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("E = MI");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("F = FA");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("A = LA");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("B = SI");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("# = Sostenido");

        jLabel8.setText("Acorde");

        jLabel9.setText("Familia");

        SI3.setBackground(new java.awt.Color(255, 255, 255));
        SI3.setForeground(new java.awt.Color(0, 0, 0));
        SI3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SI3.setText("B");
        SI3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        FA3.setBackground(new java.awt.Color(255, 255, 255));
        FA3.setForeground(new java.awt.Color(0, 0, 0));
        FA3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FA3.setText("F");
        FA3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SOL3.setBackground(new java.awt.Color(255, 255, 255));
        SOL3.setForeground(new java.awt.Color(0, 0, 0));
        SOL3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SOL3.setText("G");
        SOL3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        LA3.setBackground(new java.awt.Color(255, 255, 255));
        LA3.setForeground(new java.awt.Color(0, 0, 0));
        LA3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LA3.setText("A");
        LA3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        LASos3.setBackground(new java.awt.Color(0, 0, 0));
        LASos3.setForeground(new java.awt.Color(0, 0, 0));
        LASos3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LASos3.setText("A#");
        LASos3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SOLSos3.setBackground(new java.awt.Color(0, 0, 0));
        SOLSos3.setForeground(new java.awt.Color(0, 0, 0));
        SOLSos3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SOLSos3.setText("G#");
        SOLSos3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        FASos3.setBackground(new java.awt.Color(0, 0, 0));
        FASos3.setForeground(new java.awt.Color(0, 0, 0));
        FASos3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FASos3.setText("F#");
        FASos3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setText("Generar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        LabelAcorde.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        LabelAcorde.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelAcorde.setText("ACORDE");

        LabelAcordeName.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        LabelAcordeName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LabelAcordeName.setText("Nombre del acorde");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DOSos1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(RESos1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(FASos1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SOLSos1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LASos1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(DOSos2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RESos2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(FASos2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SOLSos2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LASos2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(DOSos3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CmbAcorde, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(CmbFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RESos3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
            .addGroup(layout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addComponent(LabelAcordeName)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(DO1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RE1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LabelAcorde)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MI1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FA1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SOL1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LA1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SI1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DO2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RE2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MI2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FA2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SOL2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LA2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SI2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DO3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RE3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MI3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(FASos3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SOLSos3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LASos3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(FA3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SOL3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LA3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SI3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FASos3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SOLSos3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LASos3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FA3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SOL3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LA3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SI3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CmbAcorde, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CmbFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FASos1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SOLSos1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LASos1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(DOSos1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RESos1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FASos2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SOLSos2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LASos2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(DOSos2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RESos2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DOSos3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RESos3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DO3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(RE3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(MI3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(FA2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SOL2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LA2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SI2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(DO2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(RE2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(MI2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(FA1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(SOL1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LA1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SI1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(DO1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(RE1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(MI1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(LabelAcorde)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelAcordeName)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int Acorde = CmbAcorde.getSelectedIndex();
        int Familia = CmbFamilia.getSelectedIndex();
        Color ColorTecla = Color.BLUE;

        //Naturales
        if (Familia == 0) {
            if (Acorde == 0) {

                Limpiar();
                DO1.setBackground(ColorTecla);
                MI1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LabelAcorde.setText("C");
                LabelAcordeName.setText("Do Mayor");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                LabelAcorde.setText("C#");
                LabelAcordeName.setText("Do Sostenido Mayor");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                LabelAcorde.setText("D");
                LabelAcordeName.setText("RE Mayor");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                LabelAcorde.setText("D#");
                LabelAcordeName.setText("RE Sostenido Mayor");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                LabelAcorde.setText("E");
                LabelAcordeName.setText("MI Mayor");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LabelAcorde.setText("F");
                LabelAcordeName.setText("FA Mayor");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                LabelAcorde.setText("F#");
                LabelAcordeName.setText("FA Sostenido Mayor");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("G");
                LabelAcordeName.setText("SOL Mayor");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("G#");
                LabelAcordeName.setText("SOL Sostenido Mayor");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("A");
                LabelAcordeName.setText("LA Mayor");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("A#");
                LabelAcordeName.setText("LA Sostenido Mayor");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("B");
                LabelAcordeName.setText("SI Mayor");
            }
        }

        //Menores
        if (Familia == 1) {
            if (Acorde == 0) {
                Limpiar();
                DO1.setBackground(ColorTecla);
                RESos1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LabelAcorde.setText("Cm");
                LabelAcordeName.setText("Do Menor");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                MI1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                LabelAcorde.setText("C#m");
                LabelAcordeName.setText("Do Sostenido Menor");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                LabelAcorde.setText("Dm");
                LabelAcordeName.setText("RE Menor");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                LabelAcorde.setText("D#m");
                LabelAcordeName.setText("RE Sostenido Menor");

            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                LabelAcorde.setText("Em");
                LabelAcordeName.setText("MI Menor");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LabelAcorde.setText("Fm");
                LabelAcordeName.setText("FA menor");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                LabelAcorde.setText("F#m");
                LabelAcordeName.setText("FA Sostenido Menor");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("Gm");
                LabelAcordeName.setText("SOL Menor");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("G#m");
                LabelAcordeName.setText("SOL Sostenido Menor");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("Am");
                LabelAcordeName.setText("LA Menor");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("A#m");
                LabelAcordeName.setText("LA Sostenido Menor");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("Bm");
                LabelAcordeName.setText("SI Menor");
            }
        }

        //Quinta
        if (Familia == 2) {
            if (Acorde == 0) {
                Limpiar();
                DO1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LabelAcorde.setText("C5");
                LabelAcordeName.setText("Do Quinta");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                LabelAcorde.setText("C#5");
                LabelAcordeName.setText("Do Sostenido Quinta");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                LabelAcorde.setText("D5");
                LabelAcordeName.setText("RE Quinta");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                LabelAcorde.setText("D#5");
                LabelAcordeName.setText("RE Sostenido Quinta");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                LabelAcorde.setText("E5");
                LabelAcordeName.setText("MI Quinta");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LabelAcorde.setText("F5");
                LabelAcordeName.setText("FA Quinta");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                LabelAcorde.setText("F#5");
                LabelAcordeName.setText("FA Sostenido Quinta");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("G5");
                LabelAcordeName.setText("SOL Quinta");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("G#5");
                LabelAcordeName.setText("SOL Sostenido Quinta");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("A5");
                LabelAcordeName.setText("LA Quinta");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("A#5");
                LabelAcordeName.setText("LA Sostenido Quinta");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("B5");
                LabelAcordeName.setText("SI Quinta");
            }
        }

        //Sus2
        if (Familia == 3) {
            if (Acorde == 0) {
                Limpiar();
                DO1.setBackground(ColorTecla);
                RE1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LabelAcorde.setText("Csus2");
                LabelAcordeName.setText("Do Suspendido 2");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                RESos1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                LabelAcorde.setText("C#sus2");
                LabelAcordeName.setText("Do Sostenido Suspendido 2");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                MI1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                LabelAcorde.setText("Dsus2");
                LabelAcordeName.setText("RE Suspendido 2");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                LabelAcorde.setText("D#sus2");
                LabelAcordeName.setText("RE Sostenido Suspendido 2");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                LabelAcorde.setText("Esus2");
                LabelAcordeName.setText("MI Suspendido 2");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LabelAcorde.setText("Fsus2");
                LabelAcordeName.setText("FA Suspendido 2");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                LabelAcorde.setText("F#sus2");
                LabelAcordeName.setText("FA Sostenido Suspendido 2");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("Gsus2");
                LabelAcordeName.setText("SOL Suspendido 2");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("G#Sus2");
                LabelAcordeName.setText("SOL Sostenido Suspendido 2");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("Asus2");
                LabelAcordeName.setText("LA Suspendido 2");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("A#sus2");
                LabelAcordeName.setText("LA Sostenido Suspendido 2");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("Bsus2");
                LabelAcordeName.setText("SI Suspendido 2");
            }
        }

        //Sus4
        if (Familia == 4) {
            if (Acorde == 0) {
                Limpiar();
                DO1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LabelAcorde.setText("Csus4");
                LabelAcordeName.setText("Do Suspendido 4");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                LabelAcorde.setText("C#sus4");
                LabelAcordeName.setText("Do Sostenido Suspendido 4");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                LabelAcorde.setText("Dsus4");
                LabelAcordeName.setText("RE Suspendido 4");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                LabelAcorde.setText("D#sus4");
                LabelAcordeName.setText("RE Sostenido Suspendido 4");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                LabelAcorde.setText("Esus4");
                LabelAcordeName.setText("MI Suspendido 4");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LabelAcorde.setText("Fsus4");
                LabelAcordeName.setText("FA Suspendido 4");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                LabelAcorde.setText("F#sus4");
                LabelAcordeName.setText("FA Sostenido Suspendido 4");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("Gsus4");
                LabelAcordeName.setText("SOL Suspendido 4");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("G#Sus4");
                LabelAcordeName.setText("SOL Sostenido Suspendido 4");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("Asus4");
                LabelAcordeName.setText("LA Suspendido 4");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("A#sus4");
                LabelAcordeName.setText("LA Sostenido Suspendido 4");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("Bsus4");
                LabelAcordeName.setText("SI Suspendido 4");
            }
        }

        //aumentado
        if (Familia == 5) {
            if (Acorde == 0) {

                Limpiar();
                DO1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                LabelAcorde.setText("Caug");
                LabelAcordeName.setText("Do Aumentado");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                LabelAcorde.setText("C#aug");
                LabelAcordeName.setText("Do Sostenido Aumentado");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                LabelAcorde.setText("Daug");
                LabelAcordeName.setText("RE Aumentado");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                LabelAcorde.setText("D#aug");
                LabelAcordeName.setText("RE Sostenido Aumentado");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LabelAcorde.setText("Eaug");
                LabelAcordeName.setText("MI Aumentado");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                LabelAcorde.setText("Faug");
                LabelAcordeName.setText("FA Aumentado");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("F#aug");
                LabelAcordeName.setText("FA Sostenido Aumentado");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("Gaug");
                LabelAcordeName.setText("SOL Aumentado");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("G#aug");
                LabelAcordeName.setText("SOL Sostenido Aumentado");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("Aaug");
                LabelAcordeName.setText("LA Aumentado");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("A#aug");
                LabelAcordeName.setText("LA Sostenido Aumentado");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                SOL2.setBackground(ColorTecla);
                LabelAcorde.setText("Baug");
                LabelAcordeName.setText("SI Aumentado");
            }
        }

        //disminuido
        if (Familia == 6) {
            if (Acorde == 0) {

                Limpiar();
                DO1.setBackground(ColorTecla);
                RESos1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                LabelAcorde.setText("Cdism");
                LabelAcordeName.setText("Do Disminuido");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                MI1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LabelAcorde.setText("C#dism");
                LabelAcordeName.setText("Do Sostenido Disminuido");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                LabelAcorde.setText("Ddism");
                LabelAcordeName.setText("RE Disminuido");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                LabelAcorde.setText("D#dism");
                LabelAcordeName.setText("RE Sostenido Mayor");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LabelAcorde.setText("Edism");
                LabelAcordeName.setText("MI Disminuido");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI2.setBackground(ColorTecla);
                LabelAcorde.setText("Fdism");
                LabelAcordeName.setText("FA Disminuido");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LabelAcorde.setText("F#dism");
                LabelAcordeName.setText("FA Sostenido Disminuido");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                LabelAcorde.setText("Gdism");
                LabelAcordeName.setText("SOL Disminuido");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                SI2.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("G#dism");
                LabelAcordeName.setText("SOL Sostenido Disminuido");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("Adism");
                LabelAcordeName.setText("LA Disminuido");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("A#dism");
                LabelAcordeName.setText("LA Sostenido Disminuido");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("Bdism");
                LabelAcordeName.setText("SI Disminuido");
            }
        }

        //Septima
        if (Familia == 7) {
            if (Acorde == 0) {
                Limpiar();
                DO1.setBackground(ColorTecla);
                MI1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                LabelAcorde.setText("C7");
                LabelAcordeName.setText("Do septima");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                LabelAcorde.setText("C#7");
                LabelAcordeName.setText("Do Sostenido septima");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LabelAcorde.setText("D7");
                LabelAcordeName.setText("RE septima");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                LabelAcorde.setText("D#7");
                LabelAcordeName.setText("RE Sostenido septima");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("E7");
                LabelAcordeName.setText("MI septima");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("F7");
                LabelAcordeName.setText("FA septima");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("F#7");
                LabelAcordeName.setText("FA Sostenido septima");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("G7");
                LabelAcordeName.setText("SOL septima");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("G#7");
                LabelAcordeName.setText("SOL Sostenido septima");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                SOL2.setBackground(ColorTecla);
                LabelAcorde.setText("A7");
                LabelAcordeName.setText("LA septima");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                SOLSos2.setBackground(ColorTecla);
                LabelAcorde.setText("A#7");
                LabelAcordeName.setText("LA Sostenido septima");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LA2.setBackground(ColorTecla);
                LabelAcorde.setText("B7");
                LabelAcordeName.setText("SI septima");
            }
        }

        //Octava
        if (Familia == 8) {
            if (Acorde == 0) {
                Limpiar();
                DO1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LabelAcorde.setText("C");
                LabelAcordeName.setText("Do Octava");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                LabelAcorde.setText("C#");
                LabelAcordeName.setText("Do Sostenido Octava");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("D");
                LabelAcordeName.setText("RE Octava");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("D#");
                LabelAcordeName.setText("RE Sostenido Octava");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("E");
                LabelAcordeName.setText("MI Octava");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("F");
                LabelAcordeName.setText("FA Octava");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("F#");
                LabelAcordeName.setText("FA Sostenido Octava");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                SOL2.setBackground(ColorTecla);
                LabelAcorde.setText("G");
                LabelAcordeName.setText("SOL Octava");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                SOLSos2.setBackground(ColorTecla);
                LabelAcorde.setText("G#m");
                LabelAcordeName.setText("SOL Sostenido Octava");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LA2.setBackground(ColorTecla);
                LabelAcorde.setText("A");
                LabelAcordeName.setText("LA Octava");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LASos2.setBackground(ColorTecla);
                LabelAcorde.setText("A#");
                LabelAcordeName.setText("LA Sostenido Octava");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                SI2.setBackground(ColorTecla);
                LabelAcorde.setText("B");
                LabelAcordeName.setText("SI Octava");
            }
        }

        //novena
        if (Familia == 9) {
            if (Acorde == 0) {
                Limpiar();
                DO1.setBackground(ColorTecla);
                MI1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("C9");
                LabelAcordeName.setText("Do novena");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("C#9");
                LabelAcordeName.setText("Do Sostenido novena");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("D9");
                LabelAcordeName.setText("RE novena");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("D#9");
                LabelAcordeName.setText("RE Sostenido novena");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("E9");
                LabelAcordeName.setText("MI novena");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                SOL2.setBackground(ColorTecla);
                LabelAcorde.setText("F9");
                LabelAcordeName.setText("FA novena");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                SOLSos2.setBackground(ColorTecla);
                LabelAcorde.setText("F#9");
                LabelAcordeName.setText("FA Sostenido novena");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LA2.setBackground(ColorTecla);
                LabelAcorde.setText("G9");
                LabelAcordeName.setText("SOL novena");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LASos2.setBackground(ColorTecla);
                LabelAcorde.setText("G#9");
                LabelAcordeName.setText("SOL Sostenido novena");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                SOL2.setBackground(ColorTecla);
                SI2.setBackground(ColorTecla);
                LabelAcorde.setText("A9");
                LabelAcordeName.setText("LA novena");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                SOLSos2.setBackground(ColorTecla);
                DO3.setBackground(ColorTecla);
                LabelAcorde.setText("A#9");
                LabelAcordeName.setText("LA Sostenido novena");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LA2.setBackground(ColorTecla);
                DOSos3.setBackground(ColorTecla);
                LabelAcorde.setText("B9");
                LabelAcordeName.setText("SI novena");
            }
        }

        //Maj6
        if (Familia == 10) {
            if (Acorde == 0) {
                Limpiar();
                DO1.setBackground(ColorTecla);
                MI1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                LabelAcorde.setText("Cmaj6");
                LabelAcordeName.setText("Do con sexta añadida");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                LabelAcorde.setText("C#maj6");
                LabelAcordeName.setText("Do Sostenido con sexta añadida");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                LabelAcorde.setText("Dmaj6");
                LabelAcordeName.setText("RE con sexta añadida");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LabelAcorde.setText("D#maj6");
                LabelAcordeName.setText("RE Sostenido con sexta añadida");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                LabelAcorde.setText("Emaj6");
                LabelAcordeName.setText("MI con sexta añadida");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("Fmaj6");
                LabelAcordeName.setText("FA con sexta añadida");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("F#maj6");
                LabelAcordeName.setText("FA Sostenido con sexta añadida");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("Gmaj7");
                LabelAcordeName.setText("SOL con sexta añadida");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("G#maj6");
                LabelAcordeName.setText("SOL Sostenido con sexta añadida");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("Amaj6");
                LabelAcordeName.setText("LA con septima añadida");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                SOL2.setBackground(ColorTecla);
                LabelAcorde.setText("A#maj6");
                LabelAcordeName.setText("LA Sostenido con sexta añadida");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                SOLSos2.setBackground(ColorTecla);
                LabelAcorde.setText("Bmaj6");
                LabelAcordeName.setText("SI con sexta añadida");
            }
        }

        //Maj7
        if (Familia == 11) {
            if (Acorde == 0) {
                Limpiar();
                DO1.setBackground(ColorTecla);
                MI1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                LabelAcorde.setText("Cmaj7");
                LabelAcordeName.setText("Do con septima añadida");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LabelAcorde.setText("C#maj7");
                LabelAcordeName.setText("Do Sostenido con septima añadida");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                LabelAcorde.setText("Dmaj7");
                LabelAcordeName.setText("RE con septima añadida");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("D#maj7");
                LabelAcordeName.setText("RE Sostenido con septima añadida");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("Emaj7");
                LabelAcordeName.setText("MI con septima añadida");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("Fmaj7");
                LabelAcordeName.setText("FA con septima añadida");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("F#maj7");
                LabelAcordeName.setText("FA Sostenido con septima añadida");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("Gmaj7");
                LabelAcordeName.setText("SOL con septima añadida");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                SOL2.setBackground(ColorTecla);
                LabelAcorde.setText("G#maj7");
                LabelAcordeName.setText("SOL Sostenido con septima añadida");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                SOLSos2.setBackground(ColorTecla);
                LabelAcorde.setText("Amaj7");
                LabelAcordeName.setText("LA con septima añadida");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LA2.setBackground(ColorTecla);
                LabelAcorde.setText("A#maj7");
                LabelAcordeName.setText("LA Sostenido con septima añadida");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LASos2.setBackground(ColorTecla);
                LabelAcorde.setText("Bmaj7");
                LabelAcordeName.setText("SI con septima añadida");
            }
        }

        //maj9
        if (Familia == 12) {
            if (Acorde == 0) {
                Limpiar();
                DO1.setBackground(ColorTecla);
                MI1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                LabelAcorde.setText("Cmaj9");
                LabelAcordeName.setText("Do con novena añadida");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LabelAcorde.setText("C#maj9");
                LabelAcordeName.setText("Do Sostenido con novena añadida");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LabelAcorde.setText("Dmaj9");
                LabelAcordeName.setText("RE con novena añadida");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("D#maj9");
                LabelAcordeName.setText("RE Sostenido con novena añadida");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("Emaj9");
                LabelAcordeName.setText("MI con novena añadida");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                SOL2.setBackground(ColorTecla);
                LabelAcorde.setText("Fmaj9");
                LabelAcordeName.setText("FA con novena añadida");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                SOLSos2.setBackground(ColorTecla);
                LabelAcorde.setText("F#maj9");
                LabelAcordeName.setText("FA Sostenido con novena añadida");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LA2.setBackground(ColorTecla);
                LabelAcorde.setText("Gmaj9");
                LabelAcordeName.setText("SOLcon  novena añadida");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                SOL2.setBackground(ColorTecla);
                LASos2.setBackground(ColorTecla);
                LabelAcorde.setText("G#maj9");
                LabelAcordeName.setText("SOL Sostenido con novena añadida");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                SOLSos2.setBackground(ColorTecla);
                SI2.setBackground(ColorTecla);
                LabelAcorde.setText("Amaj9");
                LabelAcordeName.setText("LA co novena añadida");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LA2.setBackground(ColorTecla);
                DO3.setBackground(ColorTecla);
                LabelAcorde.setText("A#maj9");
                LabelAcordeName.setText("LA Sostenido con novena añadida");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LASos2.setBackground(ColorTecla);
                DOSos3.setBackground(ColorTecla);
                LabelAcorde.setText("Bmaj9");
                LabelAcordeName.setText("SI con novena añadida");
            }
        }

        //Maj11
        if (Familia == 13) {
            if (Acorde == 0) {
                Limpiar();
                DO1.setBackground(ColorTecla);
                MI1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LabelAcorde.setText("Cmaj11");
                LabelAcordeName.setText("Do con onceaba añadida");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LabelAcorde.setText("C#maj11");
                LabelAcordeName.setText("Do Sostenido con onceaba añadida");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                SOL2.setBackground(ColorTecla);
                LabelAcorde.setText("Dmaj11");
                LabelAcordeName.setText("RE con onceaba añadida");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                SOLSos3.setBackground(ColorTecla);
                LabelAcorde.setText("D#maj11");
                LabelAcordeName.setText("RE Sostenido con onceaba añadida");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                LA3.setBackground(ColorTecla);
                LabelAcorde.setText("Emaj11");
                LabelAcordeName.setText("MI con onceaba añadida");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                LASos3.setBackground(ColorTecla);
                LabelAcorde.setText("Fmaj11");
                LabelAcordeName.setText("FA con onceaba añadida");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                SI2.setBackground(ColorTecla);
                LabelAcorde.setText("F#maj11");
                LabelAcordeName.setText("FA Sostenido con onceba añadida");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                DO3.setBackground(ColorTecla);
                LabelAcorde.setText("Gmaj11");
                LabelAcordeName.setText("SOL con onceaba añadida");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                SOL2.setBackground(ColorTecla);
                DOSos3.setBackground(ColorTecla);
                LabelAcorde.setText("G#maj11");
                LabelAcordeName.setText("SOL Sostenido con onceaba añadida");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                SOLSos2.setBackground(ColorTecla);
                RE3.setBackground(ColorTecla);
                LabelAcorde.setText("Amaj11");
                LabelAcordeName.setText("LA con onceaba añadida");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LA2.setBackground(ColorTecla);
                RESos3.setBackground(ColorTecla);
                LabelAcorde.setText("A#maj11");
                LabelAcordeName.setText("LA Sostenido con onceaba añadida");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LASos2.setBackground(ColorTecla);
                MI3.setBackground(ColorTecla);
                LabelAcorde.setText("Bmaj11");
                LabelAcordeName.setText("SI con onceaba añadida");
            }
        }

        //Maj13
        if (Familia == 14) {
            if (Acorde == 0) {
                Limpiar();
                DO1.setBackground(ColorTecla);
                MI1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                LA2.setBackground(ColorTecla);
                LabelAcorde.setText("Cmaj13");
                LabelAcordeName.setText("Do con treceaba añadida");
            }
            if (Acorde == 1) {
                Limpiar();
                DOSos1.setBackground(ColorTecla);
                FA1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                LASos2.setBackground(ColorTecla);
                LabelAcorde.setText("C#maj13");
                LabelAcordeName.setText("Do Sostenido con treceaba añadida");
            }
            if (Acorde == 2) {
                Limpiar();
                RE1.setBackground(ColorTecla);
                FASos1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                SI2.setBackground(ColorTecla);
                LabelAcorde.setText("Dmaj13");
                LabelAcordeName.setText("RE con treceaba añadida");
            }
            if (Acorde == 3) {
                Limpiar();
                RESos1.setBackground(ColorTecla);
                SOL1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                DO3.setBackground(ColorTecla);
                LabelAcorde.setText("D#maj13");
                LabelAcordeName.setText("RE Sostenido con treceaba añadida");
            }
            if (Acorde == 4) {
                Limpiar();
                MI1.setBackground(ColorTecla);
                SOLSos1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                DOSos3.setBackground(ColorTecla);
                LabelAcorde.setText("Emaj13");
                LabelAcordeName.setText("MI con treceaba añadida");
            }
            if (Acorde == 5) {
                Limpiar();
                FA1.setBackground(ColorTecla);
                LA1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                RE3.setBackground(ColorTecla);
                LabelAcorde.setText("Fmaj13");
                LabelAcordeName.setText("FA con treceaba añadida");
            }
            if (Acorde == 6) {
                Limpiar();
                FASos1.setBackground(ColorTecla);
                LASos1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                RESos3.setBackground(ColorTecla);
                LabelAcorde.setText("F#maj13");
                LabelAcordeName.setText("FA Sostenido con treceaba añadida");
            }
            if (Acorde == 7) {
                Limpiar();
                SOL1.setBackground(ColorTecla);
                SI1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                MI3.setBackground(ColorTecla);
                LabelAcorde.setText("Gmaj13");
                LabelAcordeName.setText("SOL con treceaba añadida");
            }
            if (Acorde == 8) {
                Limpiar();
                SOLSos1.setBackground(ColorTecla);
                DO2.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                SOL2.setBackground(ColorTecla);
                FA3.setBackground(ColorTecla);
                LabelAcorde.setText("G#maj13");
                LabelAcordeName.setText("SOL Sostenido con treceaba añadida");
            }
            if (Acorde == 9) {
                Limpiar();
                LA1.setBackground(ColorTecla);
                DOSos2.setBackground(ColorTecla);
                MI2.setBackground(ColorTecla);
                SOLSos2.setBackground(ColorTecla);
                FASos3.setBackground(ColorTecla);
                LabelAcorde.setText("Amaj13");
                LabelAcordeName.setText("LA con treceaba añadida");
            }
            if (Acorde == 10) {
                Limpiar();
                LASos1.setBackground(ColorTecla);
                RE2.setBackground(ColorTecla);
                FA2.setBackground(ColorTecla);
                LA2.setBackground(ColorTecla);
                SOL3.setBackground(ColorTecla);
                LabelAcorde.setText("A#maj13");
                LabelAcordeName.setText("LA Sostenido con treceaba añadida");
            }
            if (Acorde == 11) {
                Limpiar();
                SI1.setBackground(ColorTecla);
                RESos2.setBackground(ColorTecla);
                FASos2.setBackground(ColorTecla);
                LASos2.setBackground(ColorTecla);
                SOLSos3.setBackground(ColorTecla);
                LabelAcorde.setText("Bmaj13");
                LabelAcordeName.setText("SI con treceaba añadida");
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Acordes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Acordes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Acordes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Acordes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Acordes().setVisible(true);
            }
        });
    }

    public void Limpiar() {
        DO1.setBackground(Color.WHITE);
        DOSos1.setBackground(Color.BLACK);
        RE1.setBackground(Color.WHITE);
        RESos1.setBackground(Color.BLACK);
        MI1.setBackground(Color.WHITE);
        FA1.setBackground(Color.WHITE);
        FASos1.setBackground(Color.BLACK);
        SOL1.setBackground(Color.WHITE);
        SOLSos1.setBackground(Color.BLACK);
        LA1.setBackground(Color.WHITE);
        LASos1.setBackground(Color.BLACK);
        SI1.setBackground(Color.WHITE);
        DO2.setBackground(Color.WHITE);
        DOSos2.setBackground(Color.BLACK);
        RE2.setBackground(Color.WHITE);
        RESos2.setBackground(Color.BLACK);
        MI2.setBackground(Color.WHITE);
        FA2.setBackground(Color.WHITE);
        FASos2.setBackground(Color.BLACK);
        SOL2.setBackground(Color.WHITE);
        SOLSos2.setBackground(Color.BLACK);
        LA2.setBackground(Color.WHITE);
        LASos2.setBackground(Color.BLACK);
        SI2.setBackground(Color.WHITE);
        DO3.setBackground(Color.WHITE);
        DOSos3.setBackground(Color.BLACK);
        RE3.setBackground(Color.WHITE);
        RESos3.setBackground(Color.BLACK);
        MI3.setBackground(Color.WHITE);
        FA3.setBackground(Color.WHITE);
        FASos3.setBackground(Color.BLACK);
        SOL3.setBackground(Color.WHITE);
        SOLSos3.setBackground(Color.BLACK);
        LA3.setBackground(Color.WHITE);
        LASos3.setBackground(Color.BLACK);
        SI3.setBackground(Color.WHITE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CmbAcorde;
    private javax.swing.JComboBox<String> CmbFamilia;
    private javax.swing.JLabel DO1;
    private javax.swing.JLabel DO2;
    private javax.swing.JLabel DO3;
    private javax.swing.JLabel DOSos1;
    private javax.swing.JLabel DOSos2;
    private javax.swing.JLabel DOSos3;
    private javax.swing.JLabel FA1;
    private javax.swing.JLabel FA2;
    private javax.swing.JLabel FA3;
    private javax.swing.JLabel FASos1;
    private javax.swing.JLabel FASos2;
    private javax.swing.JLabel FASos3;
    private javax.swing.JLabel LA1;
    private javax.swing.JLabel LA2;
    private javax.swing.JLabel LA3;
    private javax.swing.JLabel LASos1;
    private javax.swing.JLabel LASos2;
    private javax.swing.JLabel LASos3;
    private javax.swing.JLabel LabelAcorde;
    private javax.swing.JLabel LabelAcordeName;
    private javax.swing.JLabel MI1;
    private javax.swing.JLabel MI2;
    private javax.swing.JLabel MI3;
    private javax.swing.JLabel RE1;
    private javax.swing.JLabel RE2;
    private javax.swing.JLabel RE3;
    private javax.swing.JLabel RESos1;
    private javax.swing.JLabel RESos2;
    private javax.swing.JLabel RESos3;
    private javax.swing.JLabel SI1;
    private javax.swing.JLabel SI2;
    private javax.swing.JLabel SI3;
    private javax.swing.JLabel SOL1;
    private javax.swing.JLabel SOL2;
    private javax.swing.JLabel SOL3;
    private javax.swing.JLabel SOLSos1;
    private javax.swing.JLabel SOLSos2;
    private javax.swing.JLabel SOLSos3;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
