/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventanas;

import Clases.Nota;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.util.Arrays;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MINEDUCYT
 */
public class GaleriaEscalas extends javax.swing.JFrame {

    DefaultTableModel escala = new DefaultTableModel();
    DefaultTableModel circulo = new DefaultTableModel();

    /**
     * Creates new form ArmadorEscalas
     */
    public GaleriaEscalas() {
        initComponents();

        this.setLocationRelativeTo(null);

        TableNotas = new JTable(escala);
        jScrollPane1.setViewportView(TableNotas);

        escala.addColumn("1°");
        escala.addColumn("2°");
        escala.addColumn("3°");
        escala.addColumn("4°");
        escala.addColumn("5°");
        escala.addColumn("6°");
        escala.addColumn("7°");
        escala.addColumn("8°");

        TableCirculo = new JTable(circulo);
        jScrollPane2.setViewportView(TableCirculo);

        circulo.addColumn("Tonica");
        circulo.addColumn("Tension°");
        circulo.addColumn("Acompañante");
        circulo.addColumn("Complemento");
        
        
        Font font = new Font("Arial Black", Font.PLAIN, 12);
        TableNotas.setFont(font);
        TableCirculo.setFont(font);
        DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
        renderer.setForeground(new Color(255, 255, 255)); 
        renderer.setBackground(new Color(51, 51, 51));  
        renderer.setFont(font);              
        TableNotas.setDefaultRenderer(Object.class, renderer);
        TableCirculo.setDefaultRenderer(Object.class, renderer);
        TableNotas.setEnabled(false);
        TableCirculo.setEnabled(false);

        
        
          ImageIcon wallpaper = new ImageIcon("src/img/wallpaperPartitura.jpg");
        Icon icon = new ImageIcon(wallpaper.getImage().getScaledInstance(LabelWallpaper.getWidth(),
                LabelWallpaper.getHeight(), Image.SCALE_DEFAULT));

        LabelWallpaper.setIcon(icon);

    }
    
@Override
public Image getIconImage() {
    URL resourceUrl = ClassLoader.getSystemResource("img/icono.png");
    if (resourceUrl != null) {
        Image retValue = Toolkit.getDefaultToolkit().getImage(resourceUrl);
        return retValue;
    } else {
        System.err.println("No se pudo encontrar el recurso 'icono.png'");
        return null;
    }
}
    public static String[] EscalaGenerada(List<Nota> notas, String notaInicial, List<Integer> progresion) {
        String[] escala = new String[progresion.size() + 1];

        int posInicial = -1;
        for (Nota nota : notas) {
            if (nota.getNombre().equalsIgnoreCase(notaInicial)) {
                posInicial = nota.getNumero() - 1;
                break;
            }
        }

        if (posInicial == -1) {
            return null;
        }

        escala[0] = notas.get(posInicial).getNombre();
        int posicionActual = posInicial;
        for (int i = 0; i < progresion.size(); i++) {
            posicionActual += progresion.get(i);
            if (posicionActual >= notas.size()) {
                posicionActual -= notas.size();
            }
            escala[i + 1] = notas.get(posicionActual).getNombre();
        }

        return escala;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableNotas = new javax.swing.JTable();
        CmbEscala = new javax.swing.JComboBox<>();
        CmbNota = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableCirculo = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        LabelSecuencia = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        LabelWallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(getIconImage());
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TableNotas.setBackground(new java.awt.Color(51, 51, 51));
        TableNotas.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        TableNotas.setForeground(new java.awt.Color(255, 255, 255));
        TableNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableNotas.setToolTipText("");
        TableNotas.setAutoscrolls(false);
        jScrollPane1.setViewportView(TableNotas);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 499, 45));

        CmbEscala.setBackground(new java.awt.Color(51, 51, 51));
        CmbEscala.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        CmbEscala.setForeground(new java.awt.Color(255, 255, 255));
        CmbEscala.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mayor", "Menor" }));
        CmbEscala.setToolTipText("");
        CmbEscala.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CmbEscala.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CmbEscalaItemStateChanged(evt);
            }
        });
        getContentPane().add(CmbEscala, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 180, 47));

        CmbNota.setBackground(new java.awt.Color(51, 51, 51));
        CmbNota.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        CmbNota.setForeground(new java.awt.Color(255, 255, 255));
        CmbNota.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DO", "DO#", "RE", "RE#", "MI", "FA", "FA#", "SOL", "SOL#", "LA", "LA#", "SI" }));
        CmbNota.setToolTipText("");
        CmbNota.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CmbNota.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CmbNotaItemStateChanged(evt);
            }
        });
        getContentPane().add(CmbNota, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 180, 47));

        TableCirculo.setBackground(new java.awt.Color(51, 51, 51));
        TableCirculo.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        TableCirculo.setForeground(new java.awt.Color(255, 255, 255));
        TableCirculo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableCirculo.setToolTipText("");
        TableCirculo.setAutoscrolls(false);
        jScrollPane2.setViewportView(TableCirculo);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 499, 45));

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Generar");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 127, 47));

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Esta escala se arma usando la secuencia:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 510, 50));

        LabelSecuencia.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        LabelSecuencia.setForeground(new java.awt.Color(255, 255, 255));
        LabelSecuencia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(LabelSecuencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 350, 510, 40));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(51, 51, 51));
        jTextField1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("Escala");
        jTextField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 80, 30));

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(51, 51, 51));
        jTextField2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 510, 90));

        jTextField3.setEditable(false);
        jTextField3.setBackground(new java.awt.Color(51, 51, 51));
        jTextField3.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(255, 255, 255));
        jTextField3.setText("Circulo");
        jTextField3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 80, 30));

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 0));
        jButton2.setText("X");
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, 40, 40));
        getContentPane().add(LabelWallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CmbNotaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CmbNotaItemStateChanged

    }//GEN-LAST:event_CmbNotaItemStateChanged

    private void CmbEscalaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CmbEscalaItemStateChanged

    }//GEN-LAST:event_CmbEscalaItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int notaIndex = CmbNota.getSelectedIndex();
        int escalaindex = CmbEscala.getSelectedIndex();

        Nota[] notas = {
            new Nota(1, "DO"),
            new Nota(2, "DO#"),
            new Nota(3, "RE"),
            new Nota(4, "RE#"),
            new Nota(5, "MI"),
            new Nota(6, "FA"),
            new Nota(7, "FA#"),
            new Nota(8, "SOL"),
            new Nota(9, "SOL#"),
            new Nota(10, "LA"),
            new Nota(11, "LA#"),
            new Nota(12, "SI")
        };

        List<Integer> progresion = null;
        String tipoEscala = "";

        if (escalaindex == 0) { 
            progresion = Arrays.asList(2, 2, 1, 2, 2, 2, 1);
            tipoEscala = "Mayor";
        } else if (escalaindex == 1) { 
            progresion = Arrays.asList(2, 1, 2, 2, 1, 2, 2);
            tipoEscala = "Menor";
        }

        if (progresion != null) {
            List<Nota> notasList = Arrays.asList(notas);
            String notaInicial = notas[notaIndex].getNombre();
            String[] escalaGenerada = escalaGenerada(notasList, notaInicial, progresion);

            while (escala.getRowCount() > 0) {
                escala.removeRow(0);
            }

            while (circulo.getRowCount() > 0) {
                circulo.removeRow(0);
            }

            if (escalaGenerada != null) {
                escala.addRow(escalaGenerada);
            } else {
                System.out.println("La nota inicial no es válida para la escala " + tipoEscala + ".");
            }
        }

        if (notaIndex == 0) {
            if (escalaindex == 0) {
                circulo.addRow(new Object[]{"DO", "FA", "SOL", "REm / LAm"});
                LabelSecuencia.setText("Tono - Tono - SemiTono - Tono - Tono - Tono - SemiTono");
            } else {
                circulo.addRow(new Object[]{"DOm", "FAm", "SOL", "REm / LAm"});
                LabelSecuencia.setText("Tono - SemiTono - Tono - Tono - SemiTono - Tono - Tono");
            }
        }

        if (notaIndex == 1) {
            if (escalaindex == 0) {
                circulo.addRow(new Object[]{"DO#", "FA#", "SOL#", "RE#m / LA#m"});
                LabelSecuencia.setText("Tono - Tono - SemiTono - Tono - Tono - Tono - SemiTono");
            } else {
                circulo.addRow(new Object[]{"DO#m", "FA#m", "SOL#", "RE#m / LA#m"});
                LabelSecuencia.setText("Tono - SemiTono - Tono - Tono - SemiTono - Tono - Tono");
            }
        }

        if (notaIndex == 2) {
            if (escalaindex == 0) {
                circulo.addRow(new Object[]{"RE", "SOL", "LA", "MIm / SIm"});
                LabelSecuencia.setText("Tono - Tono - SemiTono - Tono - Tono - Tono - SemiTono");
            } else {
                circulo.addRow(new Object[]{"REm", "SOLm", "LA", "MIm / SIm"});
                LabelSecuencia.setText("Tono - SemiTono - Tono - Tono - SemiTono - Tono - Tono");
            }
        }

        if (notaIndex == 3) {
            if (escalaindex == 0) {
                circulo.addRow(new Object[]{"RE#", "SOL#", "LA#", "FAm / DOm"});
                LabelSecuencia.setText("Tono - Tono - SemiTono - Tono - Tono - Tono - SemiTono");
            } else {
                circulo.addRow(new Object[]{"RE#m", "SOL#m", "LA#", "FAm / DOm"});
                LabelSecuencia.setText("Tono - SemiTono - Tono - Tono - SemiTono - Tono - Tono");
            }
        }

        if (notaIndex == 4) {
            if (escalaindex == 0) {
                circulo.addRow(new Object[]{"MI", "LA", "SI", "FA#m / REm"});
                LabelSecuencia.setText("Tono - Tono - SemiTono - Tono - Tono - Tono - SemiTono");
            } else {
                circulo.addRow(new Object[]{"MIm", "LAm", "SI", "FA#m / DO#m"});
                LabelSecuencia.setText("Tono - SemiTono - Tono - Tono - SemiTono - Tono - Tono");
            }
        }

        if (notaIndex == 5) {
            if (escalaindex == 0) {
                circulo.addRow(new Object[]{"FA", "LA#", "DO", "SOLm / REm"});
                LabelSecuencia.setText("Tono - Tono - SemiTono - Tono - Tono - Tono - SemiTono");
            } else {
                circulo.addRow(new Object[]{"FAm", "LA#m", "DO", "SOLm / REm"});
                LabelSecuencia.setText("Tono - SemiTono - Tono - Tono - SemiTono - Tono - Tono");
            }
        }

        if (notaIndex == 6) {
            if (escalaindex == 0) {
                circulo.addRow(new Object[]{"FA#", "SI", "DO#", "SOL#m / RE#m"});
                LabelSecuencia.setText("Tono - Tono - SemiTono - Tono - Tono - Tono - SemiTono");
            } else {
                circulo.addRow(new Object[]{"FA#m", "SIm", "DO#", "SOL#m / RE#m"});
                LabelSecuencia.setText("Tono - SemiTono - Tono - Tono - SemiTono - Tono - Tono");
            }
        }

        if (notaIndex == 7) {
            if (escalaindex == 0) {
                circulo.addRow(new Object[]{"SOL", "DO", "RE", "LAm /  MIm"});
                LabelSecuencia.setText("Tono - Tono - SemiTono - Tono - Tono - Tono - SemiTono");
            } else {
                circulo.addRow(new Object[]{"SOL", "DO", "RE", "LAm /  MIm"});
                LabelSecuencia.setText("Tono - SemiTono - Tono - Tono - SemiTono - Tono - Tono");
            }
        }

        if (notaIndex == 8) {
            if (escalaindex == 0) {
                circulo.addRow(new Object[]{"SOL#", "DO#", "RE#", "LA#m / FAm"});
                LabelSecuencia.setText("Tono - Tono - SemiTono - Tono - Tono - Tono - SemiTono");
            } else {
                circulo.addRow(new Object[]{"SOL#m", "DO#m", "RE#", "LA#m / FAm"});
                LabelSecuencia.setText("Tono - SemiTono - Tono - Tono - SemiTono - Tono - Tono");
            }
        }

        if (notaIndex == 9) {
            if (escalaindex == 0) {
                circulo.addRow(new Object[]{"LA", "RE", "MI", "SIm / FA#m"});
                LabelSecuencia.setText("Tono - Tono - SemiTono - Tono - Tono - Tono - SemiTono");
            } else {
                circulo.addRow(new Object[]{"LAm", "REm", "MI", "SIm / FA#m"});
                LabelSecuencia.setText("Tono - SemiTono - Tono - Tono - SemiTono - Tono - Tono");
            }
        }

        if (notaIndex == 10) {
            if (escalaindex == 0) {
                circulo.addRow(new Object[]{"LA#", "RE#", "FA", "DOm / SOLm"});
                LabelSecuencia.setText("Tono - Tono - SemiTono - Tono - Tono - Tono - SemiTono");
            } else {
                circulo.addRow(new Object[]{"LA#m", "RE#m", "FA", "DOm / SOLm"});
                LabelSecuencia.setText("Tono - SemiTono - Tono - Tono - SemiTono - Tono - Tono");
            }
        }
        if (notaIndex == 11) {
            if (escalaindex == 0) {
                circulo.addRow(new Object[]{"SI", "MI", "FA#", "DO#m / SOL#m"});
                LabelSecuencia.setText("Tono - Tono - SemiTono - Tono - Tono - Tono - SemiTono");
            } else {
                circulo.addRow(new Object[]{"SIm", "MIm", "FA#", "DO#m / SOL#m"});
                LabelSecuencia.setText("Tono - SemiTono - Tono - Tono - SemiTono - Tono - Tono");
            }
        }
    }

    public static String[] escalaGenerada(List<Nota> notas, String notaInicial, List<Integer> progresion) {
        String[] escala = new String[progresion.size() + 1];

        int posInicial = -1;
        for (Nota nota : notas) {
            if (nota.getNombre().equalsIgnoreCase(notaInicial)) {
                posInicial = nota.getNumero() - 1;
                break;
            }
        }

        if (posInicial == -1) {
            return null;
        }

        escala[0] = notas.get(posInicial).getNombre();
        int posicionActual = posInicial;
        for (int i = 0; i < progresion.size(); i++) {
            posicionActual += progresion.get(i);
            if (posicionActual >= notas.size()) {
                posicionActual -= notas.size();
            }
            escala[i + 1] = notas.get(posicionActual).getNombre();
        }

        return escala;

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GaleriaEscalas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GaleriaEscalas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GaleriaEscalas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GaleriaEscalas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GaleriaEscalas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CmbEscala;
    private javax.swing.JComboBox<String> CmbNota;
    private javax.swing.JLabel LabelSecuencia;
    private javax.swing.JLabel LabelWallpaper;
    private javax.swing.JTable TableCirculo;
    private javax.swing.JTable TableNotas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
