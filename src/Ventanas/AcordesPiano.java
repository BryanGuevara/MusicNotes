/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventanas;

import java.awt.Color;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.sound.midi.*;
import javax.swing.JButton;
import javax.swing.Timer;

/**
 *
 * @author MINEDUCYT
 */
public class AcordesPiano extends javax.swing.JFrame {

    private Synthesizer synthesizer;
    private MidiChannel[] channels;
    private boolean[] isNotePlaying = new boolean[128];
    private Timer[] timers = new Timer[128];

    /**
     * Creates new form Acordes
     */
    public AcordesPiano() {
        initComponents();

        this.setLocationRelativeTo(null);

        initializeSynthesizer();

        ImageIcon wallpaper = new ImageIcon("src/img/wallpaperPiano.jpg");
        Icon icon = new ImageIcon(wallpaper.getImage().getScaledInstance(LabelWallpaper.getWidth(),
                LabelWallpaper.getHeight(), Image.SCALE_DEFAULT));

        LabelWallpaper.setIcon(icon);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CmbAcorde = new javax.swing.JComboBox<>();
        CmbFamilia = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        LabelAcorde = new javax.swing.JLabel();
        LabelAcordeName = new javax.swing.JLabel();
        RESos4 = new javax.swing.JButton();
        DOSos4 = new javax.swing.JButton();
        DO4 = new javax.swing.JButton();
        MI4 = new javax.swing.JButton();
        RE4 = new javax.swing.JButton();
        DOSos3 = new javax.swing.JButton();
        RESos3 = new javax.swing.JButton();
        FASos3 = new javax.swing.JButton();
        SOLSos3 = new javax.swing.JButton();
        LASos3 = new javax.swing.JButton();
        DO3 = new javax.swing.JButton();
        RE3 = new javax.swing.JButton();
        MI3 = new javax.swing.JButton();
        FA3 = new javax.swing.JButton();
        SOL3 = new javax.swing.JButton();
        LA3 = new javax.swing.JButton();
        SI3 = new javax.swing.JButton();
        DOSos2 = new javax.swing.JButton();
        RESos2 = new javax.swing.JButton();
        FASos2 = new javax.swing.JButton();
        SOLSos2 = new javax.swing.JButton();
        LASos2 = new javax.swing.JButton();
        DO2 = new javax.swing.JButton();
        RE2 = new javax.swing.JButton();
        MI2 = new javax.swing.JButton();
        FA2 = new javax.swing.JButton();
        SOL2 = new javax.swing.JButton();
        LA2 = new javax.swing.JButton();
        SI2 = new javax.swing.JButton();
        DOSos1 = new javax.swing.JButton();
        RESos1 = new javax.swing.JButton();
        FASos1 = new javax.swing.JButton();
        LASos1 = new javax.swing.JButton();
        SOLSos1 = new javax.swing.JButton();
        MI1 = new javax.swing.JButton();
        FA1 = new javax.swing.JButton();
        RE1 = new javax.swing.JButton();
        DO1 = new javax.swing.JButton();
        SOL1 = new javax.swing.JButton();
        LA1 = new javax.swing.JButton();
        SI1 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        LabelWallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(getIconImage());
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CmbAcorde.setBackground(new java.awt.Color(51, 51, 51));
        CmbAcorde.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        CmbAcorde.setForeground(new java.awt.Color(255, 255, 255));
        CmbAcorde.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DO", "DO#", "RE", "RE#", "MI", "FA", "FA#", "SOL", "SOL#", "LA", "LA#", "SI" }));
        CmbAcorde.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(CmbAcorde, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 120, 40));

        CmbFamilia.setBackground(new java.awt.Color(51, 51, 51));
        CmbFamilia.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        CmbFamilia.setForeground(new java.awt.Color(255, 255, 255));
        CmbFamilia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nota", "Mayor", "Primera Inversion", "Segunda Inversion", "Menor (m)", "Quinta (5)", "Suspendido 2 (sus2)", "Suspendido 4 (sus4)", "Aumentado (aug)", "Disminuido (dism)", "Séptima (7)", "Octava", "Novena (9)", "Sexta Añadida (6)", "Septima Añadida (maj7)", "Novena Añadida (maj9)", "Onceaba Añadida (maj11)", "Treceaba añadida (maj13)", "Añadido 2 (add2)", "Añadido 4 (add4)", "Añadido 9 (add9)", "Añadido 11 (add11)", "Añadido 13 (add13)", "Sobre DO (/C)", "Sobre DO Sostenido (/C#)", "Sobre RE (/D)", "Sobre RE Sostenido (/D#)", "Sobre MI (/E)", "Sobre FA (/F)", "Sobre FA# (/F#)", "Sobre SOL (/G)", "Sobre SOL# (/G#)", "Sobre LA (/A)", "Sobre LA# (/A#)", "Sobre SI (/B)", "Septima Sobre obre DO (7/C)", "Septima Sobre DO Sostenido (7/C#)", "Septima Sobre RE (7/D)", "Septima Sobre RE Sostenido (7/D#)", "Septima Sobre MI (7/E)", "Septima Sobre FA (7/F)", "Septima Sobre FA# (7/F#)", "Septima Sobre SOL (7/G)", "Septima Sobre SOL# (7/G#)", "Septima Sobre LA (7/A)", "Septima Sobre LA# (7/A#)", "Septima Sobre SI (7/B)", "Septima Sobre obre DO Septima(7/C7)", "Septima Sobre DO Sostenido Septima (7/C#7)", "Septima Sobre RE Septima (7/D7)", "Septima Sobre RE Sostenido Septima (7/D#7)", "Septima Sobre MI Septima (7/E7)", "Septima Sobre FA Septima (7/F7)", "Septima Sobre FASostenido Septima (7/F#7)", "Septima Sobre SOL Septima (7/G7)", "Septima Sobre SOLSostenido Septima (7/G#7)", "Septima Sobre LA Septima (7/A7)", "Septima Sobre LA Sostenido Septima (7/A#7)", "Septima Sobre SI Septima (7/B7)", "voicing en octavas (/vo)", "Novena añadida añadido 11 (maj9add11)", "Onceaba añadida añadido 13 (maj11add13)", "Novena añadida añadido 11, 13 (maj9add11add13)" }));
        CmbFamilia.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(CmbFamilia, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 440, 40));

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Generar");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 80, 119, 40));

        LabelAcorde.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        LabelAcorde.setForeground(new java.awt.Color(255, 255, 255));
        LabelAcorde.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelAcorde.setText("ACORDE");
        getContentPane().add(LabelAcorde, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 420, 520, -1));

        LabelAcordeName.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        LabelAcordeName.setForeground(new java.awt.Color(255, 255, 255));
        LabelAcordeName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelAcordeName.setText("Nombre del acorde");
        getContentPane().add(LabelAcordeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 470, 520, -1));

        RESos4.setBackground(new java.awt.Color(0, 0, 0));
        RESos4.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        RESos4.setForeground(new java.awt.Color(255, 255, 255));
        RESos4.setText("D#");
        RESos4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(RESos4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 160, 20, 80));

        DOSos4.setBackground(new java.awt.Color(0, 0, 0));
        DOSos4.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        DOSos4.setForeground(new java.awt.Color(255, 255, 255));
        DOSos4.setText("C#");
        DOSos4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(DOSos4, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 160, 20, 80));

        DO4.setBackground(new java.awt.Color(255, 255, 255));
        DO4.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        DO4.setForeground(new java.awt.Color(0, 0, 0));
        DO4.setText("C");
        DO4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(DO4, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 190, 30, 130));

        MI4.setBackground(new java.awt.Color(255, 255, 255));
        MI4.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        MI4.setForeground(new java.awt.Color(0, 0, 0));
        MI4.setText("E");
        MI4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(MI4, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 190, 30, 130));

        RE4.setBackground(new java.awt.Color(255, 255, 255));
        RE4.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        RE4.setForeground(new java.awt.Color(0, 0, 0));
        RE4.setText("D");
        RE4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(RE4, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 190, 30, 130));

        DOSos3.setBackground(new java.awt.Color(0, 0, 0));
        DOSos3.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        DOSos3.setForeground(new java.awt.Color(255, 255, 255));
        DOSos3.setText("C#");
        DOSos3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(DOSos3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, 20, 80));

        RESos3.setBackground(new java.awt.Color(0, 0, 0));
        RESos3.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        RESos3.setForeground(new java.awt.Color(255, 255, 255));
        RESos3.setText("D#");
        RESos3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(RESos3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 160, 20, 80));

        FASos3.setBackground(new java.awt.Color(0, 0, 0));
        FASos3.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        FASos3.setForeground(new java.awt.Color(255, 255, 255));
        FASos3.setText("F#");
        FASos3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(FASos3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 160, 20, 80));

        SOLSos3.setBackground(new java.awt.Color(0, 0, 0));
        SOLSos3.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        SOLSos3.setForeground(new java.awt.Color(255, 255, 255));
        SOLSos3.setText("G#");
        SOLSos3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(SOLSos3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 160, 20, 80));

        LASos3.setBackground(new java.awt.Color(0, 0, 0));
        LASos3.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        LASos3.setForeground(new java.awt.Color(255, 255, 255));
        LASos3.setText("A#");
        LASos3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(LASos3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 160, 20, 80));

        DO3.setBackground(new java.awt.Color(255, 255, 255));
        DO3.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        DO3.setForeground(new java.awt.Color(0, 0, 0));
        DO3.setText("C");
        DO3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(DO3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 190, 30, 130));

        RE3.setBackground(new java.awt.Color(255, 255, 255));
        RE3.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        RE3.setForeground(new java.awt.Color(0, 0, 0));
        RE3.setText("D");
        RE3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(RE3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 190, 30, 130));

        MI3.setBackground(new java.awt.Color(255, 255, 255));
        MI3.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        MI3.setForeground(new java.awt.Color(0, 0, 0));
        MI3.setText("E");
        MI3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(MI3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 190, 30, 130));

        FA3.setBackground(new java.awt.Color(255, 255, 255));
        FA3.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        FA3.setForeground(new java.awt.Color(0, 0, 0));
        FA3.setText("F");
        FA3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(FA3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 190, 30, 130));

        SOL3.setBackground(new java.awt.Color(255, 255, 255));
        SOL3.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        SOL3.setForeground(new java.awt.Color(0, 0, 0));
        SOL3.setText("G");
        SOL3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(SOL3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 190, 30, 130));

        LA3.setBackground(new java.awt.Color(255, 255, 255));
        LA3.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        LA3.setForeground(new java.awt.Color(0, 0, 0));
        LA3.setText("A");
        LA3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(LA3, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 190, 30, 130));

        SI3.setBackground(new java.awt.Color(255, 255, 255));
        SI3.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        SI3.setForeground(new java.awt.Color(0, 0, 0));
        SI3.setText("B");
        SI3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(SI3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 190, 30, 130));

        DOSos2.setBackground(new java.awt.Color(0, 0, 0));
        DOSos2.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        DOSos2.setForeground(new java.awt.Color(255, 255, 255));
        DOSos2.setText("C#");
        DOSos2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(DOSos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 160, 20, 80));

        RESos2.setBackground(new java.awt.Color(0, 0, 0));
        RESos2.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        RESos2.setForeground(new java.awt.Color(255, 255, 255));
        RESos2.setText("D#");
        RESos2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(RESos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, 20, 80));

        FASos2.setBackground(new java.awt.Color(0, 0, 0));
        FASos2.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        FASos2.setForeground(new java.awt.Color(255, 255, 255));
        FASos2.setText("F#");
        FASos2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(FASos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, 20, 80));

        SOLSos2.setBackground(new java.awt.Color(0, 0, 0));
        SOLSos2.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        SOLSos2.setForeground(new java.awt.Color(255, 255, 255));
        SOLSos2.setText("G#");
        SOLSos2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(SOLSos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 20, 80));

        LASos2.setBackground(new java.awt.Color(0, 0, 0));
        LASos2.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        LASos2.setForeground(new java.awt.Color(255, 255, 255));
        LASos2.setText("A#");
        LASos2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(LASos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 160, 20, 80));

        DO2.setBackground(new java.awt.Color(255, 255, 255));
        DO2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        DO2.setForeground(new java.awt.Color(0, 0, 0));
        DO2.setText("C");
        DO2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(DO2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 190, 30, 130));

        RE2.setBackground(new java.awt.Color(255, 255, 255));
        RE2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        RE2.setForeground(new java.awt.Color(0, 0, 0));
        RE2.setText("D");
        RE2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(RE2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 30, 130));

        MI2.setBackground(new java.awt.Color(255, 255, 255));
        MI2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        MI2.setForeground(new java.awt.Color(0, 0, 0));
        MI2.setText("E");
        MI2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(MI2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, 30, 130));

        FA2.setBackground(new java.awt.Color(255, 255, 255));
        FA2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        FA2.setForeground(new java.awt.Color(0, 0, 0));
        FA2.setText("F");
        FA2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(FA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, 30, 130));

        SOL2.setBackground(new java.awt.Color(255, 255, 255));
        SOL2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        SOL2.setForeground(new java.awt.Color(0, 0, 0));
        SOL2.setText("G");
        SOL2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(SOL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 30, 130));

        LA2.setBackground(new java.awt.Color(255, 255, 255));
        LA2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        LA2.setForeground(new java.awt.Color(0, 0, 0));
        LA2.setText("A");
        LA2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(LA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, 30, 130));

        SI2.setBackground(new java.awt.Color(255, 255, 255));
        SI2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        SI2.setForeground(new java.awt.Color(0, 0, 0));
        SI2.setText("B");
        SI2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(SI2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 190, 30, 130));

        DOSos1.setBackground(new java.awt.Color(0, 0, 0));
        DOSos1.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        DOSos1.setForeground(new java.awt.Color(255, 255, 255));
        DOSos1.setText("C#");
        DOSos1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(DOSos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 20, 80));

        RESos1.setBackground(new java.awt.Color(0, 0, 0));
        RESos1.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        RESos1.setForeground(new java.awt.Color(255, 255, 255));
        RESos1.setText("D#");
        RESos1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(RESos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 20, 80));

        FASos1.setBackground(new java.awt.Color(0, 0, 0));
        FASos1.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        FASos1.setForeground(new java.awt.Color(255, 255, 255));
        FASos1.setText("F#");
        FASos1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(FASos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 20, 80));

        LASos1.setBackground(new java.awt.Color(0, 0, 0));
        LASos1.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        LASos1.setForeground(new java.awt.Color(255, 255, 255));
        LASos1.setText("A#");
        LASos1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(LASos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 20, 80));

        SOLSos1.setBackground(new java.awt.Color(0, 0, 0));
        SOLSos1.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        SOLSos1.setForeground(new java.awt.Color(255, 255, 255));
        SOLSos1.setText("G#");
        SOLSos1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(SOLSos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 20, 80));

        MI1.setBackground(new java.awt.Color(255, 255, 255));
        MI1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        MI1.setForeground(new java.awt.Color(0, 0, 0));
        MI1.setText("E");
        MI1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(MI1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 30, 130));

        FA1.setBackground(new java.awt.Color(255, 255, 255));
        FA1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        FA1.setForeground(new java.awt.Color(0, 0, 0));
        FA1.setText("F");
        FA1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(FA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 30, 130));

        RE1.setBackground(new java.awt.Color(255, 255, 255));
        RE1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        RE1.setForeground(new java.awt.Color(0, 0, 0));
        RE1.setText("D");
        RE1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(RE1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 30, 130));

        DO1.setBackground(new java.awt.Color(255, 255, 255));
        DO1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        DO1.setForeground(new java.awt.Color(0, 0, 0));
        DO1.setText("C");
        DO1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(DO1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 30, 130));

        SOL1.setBackground(new java.awt.Color(255, 255, 255));
        SOL1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        SOL1.setForeground(new java.awt.Color(0, 0, 0));
        SOL1.setText("G");
        SOL1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(SOL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 30, 130));

        LA1.setBackground(new java.awt.Color(255, 255, 255));
        LA1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        LA1.setForeground(new java.awt.Color(0, 0, 0));
        LA1.setText("A");
        LA1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(LA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 30, 130));

        SI1.setBackground(new java.awt.Color(255, 255, 255));
        SI1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        SI1.setForeground(new java.awt.Color(0, 0, 0));
        SI1.setText("B");
        SI1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(SI1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 30, 130));

        jTextField7.setEditable(false);
        jTextField7.setBackground(new java.awt.Color(51, 51, 51));
        jTextField7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 410, 540, 90));

        jTextField8.setEditable(false);
        jTextField8.setBackground(new java.awt.Color(51, 51, 51));
        jTextField8.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(255, 255, 255));
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField8.setText("Acorde");
        jTextField8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 80, 30));
        jTextField8.getAccessibleContext().setAccessibleName("");

        jTextField9.setEditable(false);
        jTextField9.setBackground(new java.awt.Color(51, 51, 51));
        jTextField9.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jTextField9.setForeground(new java.awt.Color(255, 255, 255));
        jTextField9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField9.setText("Familia");
        jTextField9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 80, 30));

        jTextField10.setEditable(false);
        jTextField10.setBackground(new java.awt.Color(51, 51, 51));
        jTextField10.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jTextField10.setForeground(new java.awt.Color(255, 255, 255));
        jTextField10.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField10.setText("C=DO   D=RE   E=MI   F=FA   G=SOL   A=LA   B=SI   #=SOSTENIDO");
        jTextField10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 540, 30));

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 0));
        jButton2.setText("X");
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 0, 40, 40));

        LabelWallpaper.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(LabelWallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int Acorde = CmbAcorde.getSelectedIndex();
        int Familia = CmbFamilia.getSelectedIndex();
        Limpiar();
        Encontrar(Acorde, Familia);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AcordesPiano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AcordesPiano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AcordesPiano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AcordesPiano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AcordesPiano().setVisible(true);
            }
        });
    }

    public void Encontrar(int Inicio, int Familia) {

        int nota1 = 0;
        int nota2 = 0;
        int nota3 = 0;
        int nota4 = 0;
        int nota5 = 0;
        int nota6 = 0;
        int nota7 = 0;
        int nota8 = 0;

        if (Familia == 0) {
            nota1 = Inicio + 1;
            LabelAcordeName.setText("");
            LabelAcorde.setText("");
        }
        if (Familia == 1) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            LabelAcordeName.setText(" Mayor");
            LabelAcorde.setText("");
        }
        if (Familia == 2) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            LabelAcordeName.setText(" Primera Inversion");
            LabelAcorde.setText("");
        }
        if (Familia == 3) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 8;
            LabelAcordeName.setText(" Segunda Inversion");
            LabelAcorde.setText("");
        }
        if (Familia == 4) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 4;
            nota3 = Inicio + 8;
            LabelAcordeName.setText(" Menor");
            LabelAcorde.setText("m");
        }
        if (Familia == 5) {
            nota1 = Inicio + 1;
            nota3 = Inicio + 8;
            LabelAcordeName.setText(" Quinta");
            LabelAcorde.setText("5");
        }
        if (Familia == 6) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 3;
            nota3 = Inicio + 8;
            LabelAcordeName.setText(" Suspendido 2");
            LabelAcorde.setText("sus2");
        }
        if (Familia == 7) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 6;
            nota3 = Inicio + 8;
            LabelAcordeName.setText(" Suspendido 4");
            LabelAcorde.setText("sus4");
        }
        if (Familia == 8) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 6;
            nota3 = Inicio + 9;
            LabelAcordeName.setText(" Aumentado");
            LabelAcorde.setText("aug");
        }
        if (Familia == 9) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 4;
            nota3 = Inicio + 7;
            LabelAcordeName.setText(" Disminuido");
            LabelAcorde.setText("dism");
        }
        if (Familia == 10) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota4 = Inicio + 11;
            LabelAcordeName.setText(" Septima");
            LabelAcorde.setText("7");
        }
        if (Familia == 11) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 8;
            nota3 = Inicio + 13;
            LabelAcordeName.setText(" en Octava");
            LabelAcorde.setText("");
        }
        if (Familia == 12) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota4 = Inicio + 11;
            nota5 = Inicio + 15;
            LabelAcordeName.setText(" Novena");
            LabelAcorde.setText("9");
        }
        if (Familia == 13) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota4 = Inicio + 10;
            LabelAcordeName.setText(" con sexta añadida");
            LabelAcorde.setText("maj6");
        }
        if (Familia == 14) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota4 = Inicio + 12;
            LabelAcordeName.setText(" con septima añadida");
            LabelAcorde.setText("maj7");
        }
        if (Familia == 15) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota4 = Inicio + 12;
            nota5 = Inicio + 15;
            LabelAcordeName.setText(" con novena añadida");
            LabelAcorde.setText("maj9");
        }
        if (Familia == 16) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota4 = Inicio + 12;
            nota5 = Inicio + 18;
            LabelAcordeName.setText(" con onceaba añadida");
            LabelAcorde.setText("maj11");
        }
        if (Familia == 17) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota4 = Inicio + 12;
            nota5 = Inicio + 22;
            LabelAcordeName.setText(" con treceaba añadida");
            LabelAcorde.setText("maj13");
        }
        if (Familia == 18) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 3;
            nota3 = Inicio + 5;
            nota4 = Inicio + 8;
            LabelAcordeName.setText(" Añadido 2");
            LabelAcorde.setText("add2");
        }
        if (Familia == 19) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 6;
            nota4 = Inicio + 8;
            LabelAcordeName.setText(" Añadido 4");
            LabelAcorde.setText("add4");
        }
        if (Familia == 20) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota5 = Inicio + 15;
            LabelAcordeName.setText(" Añadido 9");
            LabelAcorde.setText("add9");
        }
        if (Familia == 21) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota4 = Inicio + 18;
            LabelAcordeName.setText(" Añadido 11");
            LabelAcorde.setText("add11");
        }
        if (Familia == 22) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota4 = Inicio + 22;
            LabelAcordeName.setText(" Añadido 13");
            LabelAcorde.setText("add13");
        }
        if (Familia == 23) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = 1;
            nota5 = 5;
            nota6 = 8;
            LabelAcordeName.setText(" Sobre DO");
            LabelAcorde.setText("/C");
        }
        if (Familia == 24) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = 2;
            nota5 = 6;
            nota6 = 9;
            LabelAcordeName.setText(" Sobre DO Sostenido");
            LabelAcorde.setText("/C#");
        }
        if (Familia == 25) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = 3;
            nota5 = 7;
            nota6 = 10;
            LabelAcordeName.setText(" Sobre RE");
            LabelAcorde.setText("/D");
        }
        if (Familia == 26) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = 4;
            nota5 = 8;
            nota6 = 11;
            LabelAcordeName.setText(" Sobre RE Sostenido");
            LabelAcorde.setText("/D#");
        }
        if (Familia == 27) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = 5;
            nota5 = 9;
            nota6 = 12;
            LabelAcordeName.setText(" Sobre MI");
            LabelAcorde.setText("/E");
        }
        if (Familia == 28) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = 6;
            nota5 = 10;
            nota6 = 13;
            LabelAcordeName.setText(" Sobre FA");
            LabelAcorde.setText("/F");
        }
        if (Familia == 29) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = 7;
            nota5 = 11;
            nota6 = 14;
            LabelAcordeName.setText(" Sobre FA Sostenido");
            LabelAcorde.setText("/F#");
        }
        if (Familia == 30) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = 8;
            nota5 = 12;
            nota6 = 15;
            LabelAcordeName.setText(" Sobre SOL");
            LabelAcorde.setText("/G");
        }
        if (Familia == 31) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = 9;
            nota5 = 13;
            nota6 = 16;
            LabelAcordeName.setText(" Sobre SOL Sostenido");
            LabelAcorde.setText("/G#");
        }
        if (Familia == 32) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = 10;
            nota5 = 14;
            nota6 = 17;
            LabelAcordeName.setText(" Sobre LA");
            LabelAcorde.setText("/A");
        }
        if (Familia == 33) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = 11;
            nota5 = 15;
            nota6 = 18;
            LabelAcordeName.setText(" Sobre LA Sostenido");
            LabelAcorde.setText("/A#");
        }
        if (Familia == 34) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = 12;
            nota5 = 16;
            nota6 = 19;
            LabelAcordeName.setText(" Sobre SI");
            LabelAcorde.setText("/B");
        }
        if (Familia == 35) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 1;
            nota6 = 5;
            nota7 = 8;
            LabelAcordeName.setText(" Septima sobre DO");
            LabelAcorde.setText("7/C");
        }
        if (Familia == 36) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 2;
            nota6 = 6;
            nota7 = 9;
            LabelAcordeName.setText(" Septima sobre DO Sostenido");
            LabelAcorde.setText("7/C#");
        }
        if (Familia == 37) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 3;
            nota6 = 7;
            nota7 = 10;
            LabelAcordeName.setText(" Septima sobre RE");
            LabelAcorde.setText("7/D");
        }
        if (Familia == 38) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 4;
            nota6 = 8;
            nota7 = 11;
            LabelAcordeName.setText(" Septima sobre RE Sostenido");
            LabelAcorde.setText("7/D#");
        }
        if (Familia == 39) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 5;
            nota6 = 9;
            nota7 = 12;
            LabelAcordeName.setText(" Septima sobre MI");
            LabelAcorde.setText("7/E");
        }
        if (Familia == 40) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 6;
            nota6 = 10;
            nota7 = 13;
            LabelAcordeName.setText(" Septima sobre FA");
            LabelAcorde.setText("7/F");
        }
        if (Familia == 41) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 7;
            nota6 = 11;
            nota7 = 14;
            LabelAcordeName.setText(" Septima sobre FA Sostenido");
            LabelAcorde.setText("7/F#");
        }
        if (Familia == 42) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 8;
            nota6 = 12;
            nota7 = 15;
            LabelAcordeName.setText(" Septima sobre SOL");
            LabelAcorde.setText("7/G");
        }
        if (Familia == 43) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 9;
            nota6 = 13;
            nota7 = 16;
            LabelAcordeName.setText(" Septima sobre SOL Sostenido");
            LabelAcorde.setText("7/G#");
        }
        if (Familia == 44) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 10;
            nota6 = 14;
            nota7 = 17;
            LabelAcordeName.setText(" Septima sobre LA");
            LabelAcorde.setText("7/A");
        }
        if (Familia == 45) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 11;
            nota6 = 15;
            nota7 = 18;
            LabelAcordeName.setText(" Septima sobre LA Sostenido");
            LabelAcorde.setText("7/A#");
        }
        if (Familia == 46) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 12;
            nota6 = 16;
            nota7 = 19;
            LabelAcordeName.setText(" Septima sobre SI");
            LabelAcorde.setText("7/B");
        }

        if (Familia == 47) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 1;
            nota6 = 5;
            nota7 = 8;
            nota8 = 11;
            LabelAcordeName.setText(" Septima sobre DO Septima");
            LabelAcorde.setText("7/C7");
        }
        if (Familia == 48) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 2;
            nota6 = 6;
            nota7 = 9;
            nota8 = 12;
            LabelAcordeName.setText(" Septima sobre DO Sostenido Septima");
            LabelAcorde.setText("7/C#7");
        }
        if (Familia == 49) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 3;
            nota6 = 7;
            nota7 = 10;
            nota8 = 13;
            LabelAcordeName.setText(" Septima sobre RE Septima");
            LabelAcorde.setText("7/D7");
        }
        if (Familia == 50) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 4;
            nota6 = 8;
            nota7 = 11;
            nota8 = 14;
            LabelAcordeName.setText(" Septima sobre RE Sostenido Septima");
            LabelAcorde.setText("7/D#7");
        }
        if (Familia == 51) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 5;
            nota6 = 9;
            nota7 = 12;
            nota8 = 15;
            LabelAcordeName.setText(" Septima sobre MI Septima");
            LabelAcorde.setText("7/E7");
        }
        if (Familia == 52) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 6;
            nota6 = 10;
            nota7 = 13;
            nota8 = 17;
            LabelAcordeName.setText(" Septima sobre FA Septima");
            LabelAcorde.setText("7/F7");
        }
        if (Familia == 53) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 7;
            nota6 = 11;
            nota7 = 14;
            nota8 = 18;
            LabelAcordeName.setText(" Septima sobre FA Sostenido Septima");
            LabelAcorde.setText("7/F#7");
        }
        if (Familia == 54) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 8;
            nota6 = 12;
            nota7 = 15;
            nota8 = 19;
            LabelAcordeName.setText(" Septima sobre SOL Septima");
            LabelAcorde.setText("7/G7");
        }
        if (Familia == 55) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 9;
            nota6 = 13;
            nota7 = 16;
            nota8 = 20;
            LabelAcordeName.setText(" Septima sobre SOL Sostenido Septima");
            LabelAcorde.setText("7/G#7");
        }
        if (Familia == 56) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 10;
            nota6 = 14;
            nota7 = 17;
            nota8 = 21;
            LabelAcordeName.setText(" Septima sobre LA Septima");
            LabelAcorde.setText("7/A7");
        }
        if (Familia == 57) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 11;
            nota6 = 15;
            nota7 = 18;
            nota8 = 22;
            LabelAcordeName.setText(" Septima sobre LA Sostenido Septima");
            LabelAcorde.setText("7/A#7");
        }
        if (Familia == 58) {
            nota1 = Inicio + 13;
            nota2 = Inicio + 17;
            nota3 = Inicio + 20;
            nota4 = Inicio + 23;
            nota5 = 12;
            nota6 = 16;
            nota7 = 19;
            nota8 = 23;
            LabelAcordeName.setText(" Septima sobre S SeptimaI");
            LabelAcorde.setText("7/B7");
        }
        if (Familia == 59) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 8;
            nota3 = Inicio + 17;
            nota4 = Inicio + 29;
            LabelAcordeName.setText(" Voicing");
            LabelAcorde.setText("/vo");
        }
        if (Familia == 60) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota4 = Inicio + 12;
            nota5 = Inicio + 15;
            nota6 = Inicio + 18;
            LabelAcordeName.setText(" con novena añadida añadido 11");
            LabelAcorde.setText("maj9add11");
        }
        if (Familia == 61) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota4 = Inicio + 12;
            nota5 = Inicio + 18;
            nota6 = Inicio + 22;
            LabelAcordeName.setText(" con onceaba añadida Añadido 13");
            LabelAcorde.setText("maj11add13");
        }
        if (Familia == 62) {
            nota1 = Inicio + 1;
            nota2 = Inicio + 5;
            nota3 = Inicio + 8;
            nota4 = Inicio + 12;
            nota5 = Inicio + 15;
            nota6 = Inicio + 18;
            nota7 = Inicio + 22;
            LabelAcordeName.setText(" con novena añadida añadido 11 añadido 13");
            LabelAcorde.setText("maj9add11add13");
        }

        Llenar(nota1, nota2, nota3, nota4, nota5, nota6, nota7, nota8);
    }

    public void Llenar(int Nota1, int Nota2, int Nota3, int Nota4, int Nota5, int Nota6, int Nota7, int Nota8) {
        Color ColorTecla = Color.BLUE;
        String nombreNota = "";
        String nombreAcorde = "";

        int[] notas = {
            60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
            72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
            84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
            96, 97, 98, 99, 100
        };

        JButton[] teclas = {
            DO1, DOSos1, RE1, RESos1, MI1, FA1, FASos1, SOL1, SOLSos1, LA1, LASos1, SI1,
            DO2, DOSos2, RE2, RESos2, MI2, FA2, FASos2, SOL2, SOLSos2, LA2, LASos2, SI2,
            DO3, DOSos3, RE3, RESos3, MI3, FA3, FASos3, SOL3, SOLSos3, LA3, LASos3, SI3,
            DO4, DOSos4, RE4, RESos4, MI4
        };

        for (int i = 0; i < notas.length; i++) {
            if (Nota1 == (i + 1) || Nota2 == (i + 1) || Nota3 == (i + 1) || Nota4 == (i + 1)
                    || Nota5 == (i + 1) || Nota6 == (i + 1) || Nota7 == (i + 1) || Nota8 == (i + 1)) {
                teclas[i].setBackground(ColorTecla);
                playNote(notas[i]);
            }
        }

        if (Nota1 > 12) {
            nombreAcorde = getNombreAcorde(Nota1 - 12);
            nombreNota = getNombreNota(Nota1 - 12);
        } else {
            nombreAcorde = getNombreAcorde(Nota1);
            nombreNota = getNombreNota(Nota1);
        }

        // Para ver la combinacion que usa el programa
        // System.out.print("Nota1: " + Nota1 + "\nNota2: " + Nota2 + "\nNota3: " + Nota3 + "\nNota4: " + Nota4 + "\nNota5: " + Nota5 + "\nNota6: " + Nota6 + "\nNota7: " + Nota7 + "\nNota8: " + Nota8 + "\n------------\n");
        if (CmbFamilia.getSelectedIndex() > 22 && CmbFamilia.getSelectedIndex() < 35 && Nota4 == (Nota1 - 12)) {
            LabelAcorde.setText(nombreNota + LabelAcorde.getText());
            LabelAcordeName.setText("Repeticion del acorde de " + nombreAcorde);
        } else if (CmbFamilia.getSelectedIndex() > 46 && CmbFamilia.getSelectedIndex() < 59 && Nota5 == (Nota1 - 12)) {
            LabelAcorde.setText(nombreNota + LabelAcorde.getText());
            LabelAcordeName.setText("Repeticion del acorde de " + nombreAcorde + " Septima");
        } else {
            LabelAcorde.setText(nombreNota + LabelAcorde.getText());
            LabelAcordeName.setText(nombreAcorde + LabelAcordeName.getText());
        }

    }

    private String getNombreAcorde(int nota) {
        switch (nota) {
            case 1:
                return "DO";
            case 2:
                return "DO Sostenido";
            case 3:
                return "RE";
            case 4:
                return "RE Sostenido";
            case 5:
                return "MI";
            case 6:
                return "FA";
            case 7:
                return "FA Sostenido";
            case 8:
                return "SOL";
            case 9:
                return "SOL Sostenido";
            case 10:
                return "LA";
            case 11:
                return "LA Sostenido";
            case 12:
                return "SI";
            default:
                return "";
        }
    }

    private String getNombreNota(int nota) {
        switch (nota) {
            case 1:
                return "C";
            case 2:
                return "C#";
            case 3:
                return "D";
            case 4:
                return "D#";
            case 5:
                return "E";
            case 6:
                return "F";
            case 7:
                return "F#";
            case 8:
                return "G";
            case 9:
                return "G#";
            case 10:
                return "A";
            case 11:
                return "A#";
            case 12:
                return "B";
            default:
                return "";
        }
    }

    public void initializeSynthesizer() {
        try {
            synthesizer = MidiSystem.getSynthesizer();
            synthesizer.open();
            channels = synthesizer.getChannels();

            addListenersToKeys();
        } catch (MidiUnavailableException e) {
            e.printStackTrace();
        }
    }

    public void playNote(int note) {
        if (channels != null) {
            int channelIndex = note % channels.length;

            // Reproduce la nota sin verificar si está sonando
            channels[channelIndex].noteOn(note, 100); // Inicia la nota

            // Crear un nuevo Timer para apagar la nota
            javax.swing.Timer timer = new javax.swing.Timer(2000, e -> {
                channels[channelIndex].noteOff(note); // Apagar la nota
                // O puedes optar por no mantener un estado isNotePlaying para permitir
                // la nota que suene de nuevo inmediatamente si se presiona
            });
            timer.setRepeats(false); // Solo ejecutar una vez
            timer.start(); // Inicia el Timer
        }
    }

    public void addListenersToKeys() {

        int[] notas = {
            60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
            72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
            84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
            96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107
        };

        JButton[] teclas = {
            DO1, DOSos1, RE1, RESos1, MI1, FA1, FASos1, SOL1, SOLSos1, LA1, LASos1, SI1,
            DO2, DOSos2, RE2, RESos2, MI2, FA2, FASos2, SOL2, SOLSos2, LA2, LASos2, SI2,
            DO3, DOSos3, RE3, RESos3, MI3, FA3, FASos3, SOL3, SOLSos3, LA3, LASos3, SI3,
            DO4, DOSos4, RE4, RESos4, MI4
        };

        for (int i = 0; i < teclas.length; i++) {
            final int note = notas[i];  // Necesario para usar dentro del ActionListener
            teclas[i].addActionListener(e -> playNote(note));
        }
    }

    public void Limpiar() {
        DO1.setBackground(Color.WHITE);
        DOSos1.setBackground(Color.BLACK);
        RE1.setBackground(Color.WHITE);
        RESos1.setBackground(Color.BLACK);
        MI1.setBackground(Color.WHITE);
        FA1.setBackground(Color.WHITE);
        FASos1.setBackground(Color.BLACK);
        SOL1.setBackground(Color.WHITE);
        SOLSos1.setBackground(Color.BLACK);
        LA1.setBackground(Color.WHITE);
        LASos1.setBackground(Color.BLACK);
        SI1.setBackground(Color.WHITE);
        DO2.setBackground(Color.WHITE);
        DOSos2.setBackground(Color.BLACK);
        RE2.setBackground(Color.WHITE);
        RESos2.setBackground(Color.BLACK);
        MI2.setBackground(Color.WHITE);
        FA2.setBackground(Color.WHITE);
        FASos2.setBackground(Color.BLACK);
        SOL2.setBackground(Color.WHITE);
        SOLSos2.setBackground(Color.BLACK);
        LA2.setBackground(Color.WHITE);
        LASos2.setBackground(Color.BLACK);
        SI2.setBackground(Color.WHITE);
        DO3.setBackground(Color.WHITE);
        DOSos3.setBackground(Color.BLACK);
        RE3.setBackground(Color.WHITE);
        RESos3.setBackground(Color.BLACK);
        MI3.setBackground(Color.WHITE);
        FA3.setBackground(Color.WHITE);
        FASos3.setBackground(Color.BLACK);
        SOL3.setBackground(Color.WHITE);
        SOLSos3.setBackground(Color.BLACK);
        LA3.setBackground(Color.WHITE);
        LASos3.setBackground(Color.BLACK);
        SI3.setBackground(Color.WHITE);
        DO4.setBackground(Color.WHITE);
        DOSos4.setBackground(Color.BLACK);
        RE4.setBackground(Color.WHITE);
        RESos4.setBackground(Color.BLACK);
        MI4.setBackground(Color.WHITE);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CmbAcorde;
    private javax.swing.JComboBox<String> CmbFamilia;
    private javax.swing.JButton DO1;
    private javax.swing.JButton DO2;
    private javax.swing.JButton DO3;
    private javax.swing.JButton DO4;
    private javax.swing.JButton DOSos1;
    private javax.swing.JButton DOSos2;
    private javax.swing.JButton DOSos3;
    private javax.swing.JButton DOSos4;
    private javax.swing.JButton FA1;
    private javax.swing.JButton FA2;
    private javax.swing.JButton FA3;
    private javax.swing.JButton FASos1;
    private javax.swing.JButton FASos2;
    private javax.swing.JButton FASos3;
    private javax.swing.JButton LA1;
    private javax.swing.JButton LA2;
    private javax.swing.JButton LA3;
    private javax.swing.JButton LASos1;
    private javax.swing.JButton LASos2;
    private javax.swing.JButton LASos3;
    private javax.swing.JLabel LabelAcorde;
    private javax.swing.JLabel LabelAcordeName;
    private javax.swing.JLabel LabelWallpaper;
    private javax.swing.JButton MI1;
    private javax.swing.JButton MI2;
    private javax.swing.JButton MI3;
    private javax.swing.JButton MI4;
    private javax.swing.JButton RE1;
    private javax.swing.JButton RE2;
    private javax.swing.JButton RE3;
    private javax.swing.JButton RE4;
    private javax.swing.JButton RESos1;
    private javax.swing.JButton RESos2;
    private javax.swing.JButton RESos3;
    private javax.swing.JButton RESos4;
    private javax.swing.JButton SI1;
    private javax.swing.JButton SI2;
    private javax.swing.JButton SI3;
    private javax.swing.JButton SOL1;
    private javax.swing.JButton SOL2;
    private javax.swing.JButton SOL3;
    private javax.swing.JButton SOLSos1;
    private javax.swing.JButton SOLSos2;
    private javax.swing.JButton SOLSos3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
