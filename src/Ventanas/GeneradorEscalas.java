/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventanas;

import Clases.Nota;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class GeneradorEscalas extends javax.swing.JFrame {

    int x = 1;
    int generada = 0;
    DefaultTableModel notas = new DefaultTableModel();
    DefaultTableModel secuencia = new DefaultTableModel();
    List<Integer> progresion = new ArrayList<>();

    public GeneradorEscalas() {
        initComponents();

        this.setLocationRelativeTo(null);
        setTitle("Generador de Escalas");
        setResizable(false);

        TableNotas = new JTable(notas);
        jScrollPane2.setViewportView(TableNotas);

        TableSecuencia = new JTable(secuencia);
        jScrollPane1.setViewportView(TableSecuencia);

        jScrollPane2.setOpaque(false);
        jScrollPane2.getViewport().setOpaque(false);
        jScrollPane2.setBorder(null);
        TableNotas.setShowGrid(false);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);
        jScrollPane1.setBorder(null);
        TableSecuencia.setShowGrid(false);

        secuencia.addColumn("Secuencia");
        ImageIcon wallpaper = new ImageIcon("src/img/wallpaperPartitura.jpg");
        Icon icon = new ImageIcon(wallpaper.getImage().getScaledInstance(LabelWallpaper.getWidth(),
                LabelWallpaper.getHeight(), Image.SCALE_DEFAULT));

        LabelWallpaper.setIcon(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableSecuencia = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        SemiTono1 = new javax.swing.JButton();
        Tono1 = new javax.swing.JButton();
        TonoMedio1 = new javax.swing.JButton();
        Tono2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableNotas = new javax.swing.JTable();
        Generar = new javax.swing.JButton();
        GenerarEscala = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        TextEscala = new javax.swing.JTextField();
        LabelWallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TableSecuencia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Secuencia"
            }
        ));
        jScrollPane1.setViewportView(TableSecuencia);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 210, 220));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(51, 51, 51));
        jTextField1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("PreeCargadas");
        jTextField1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 200, 40));

        SemiTono1.setBackground(new java.awt.Color(51, 51, 51));
        SemiTono1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        SemiTono1.setForeground(new java.awt.Color(255, 255, 255));
        SemiTono1.setText("1 Semitono");
        SemiTono1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SemiTono1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SemiTono1ActionPerformed(evt);
            }
        });
        getContentPane().add(SemiTono1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 200, 40));

        Tono1.setBackground(new java.awt.Color(51, 51, 51));
        Tono1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        Tono1.setForeground(new java.awt.Color(255, 255, 255));
        Tono1.setText("1 Tono");
        Tono1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Tono1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tono1ActionPerformed(evt);
            }
        });
        getContentPane().add(Tono1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 200, 40));

        TonoMedio1.setBackground(new java.awt.Color(51, 51, 51));
        TonoMedio1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        TonoMedio1.setForeground(new java.awt.Color(255, 255, 255));
        TonoMedio1.setText("1 Tono y medio");
        TonoMedio1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TonoMedio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TonoMedio1ActionPerformed(evt);
            }
        });
        getContentPane().add(TonoMedio1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 200, 40));

        Tono2.setBackground(new java.awt.Color(51, 51, 51));
        Tono2.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        Tono2.setForeground(new java.awt.Color(255, 255, 255));
        Tono2.setText("2 Tonos");
        Tono2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Tono2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tono2ActionPerformed(evt);
            }
        });
        getContentPane().add(Tono2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 200, 40));

        TableNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "1°", "2°", "3°", "4°", "5°", "6°", "7°", "8°"
            }
        ));
        jScrollPane2.setViewportView(TableNotas);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 287, 660, 220));

        Generar.setBackground(new java.awt.Color(51, 51, 51));
        Generar.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        Generar.setForeground(new java.awt.Color(255, 255, 255));
        Generar.setText("Generar");
        Generar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Generar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerarActionPerformed(evt);
            }
        });
        getContentPane().add(Generar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, 200, 40));

        GenerarEscala.setBackground(new java.awt.Color(51, 51, 51));
        GenerarEscala.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        GenerarEscala.setForeground(new java.awt.Color(255, 255, 255));
        GenerarEscala.setText("Generar");
        GenerarEscala.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        GenerarEscala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerarEscalaActionPerformed(evt);
            }
        });
        getContentPane().add(GenerarEscala, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 200, 40));

        Reset.setBackground(new java.awt.Color(51, 51, 51));
        Reset.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        Reset.setForeground(new java.awt.Color(255, 255, 255));
        Reset.setText("Reiniciar");
        Reset.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });
        getContentPane().add(Reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 200, 40));

        jComboBox1.setBackground(new java.awt.Color(51, 51, 51));
        jComboBox1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mayor", "Menor", "Blues", "Cromatica", "Pentatonica", "Armonica" }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 60, 200, 40));

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(51, 51, 51));
        jTextField2.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("Insertar secencia");
        jTextField2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 220, 40));

        TextEscala.setEditable(false);
        TextEscala.setBackground(new java.awt.Color(51, 51, 51));
        TextEscala.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        TextEscala.setForeground(new java.awt.Color(255, 255, 255));
        TextEscala.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TextEscala.setText("Generador de escalas");
        TextEscala.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(TextEscala, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 220, 200, 40));
        getContentPane().add(LabelWallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 530));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SemiTono1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SemiTono1ActionPerformed
        if (generada == 0) {
            if (x < 13) {
                x += 1;
                progresion.add(1);
                secuencia.addRow(new Object[]{"SemiTono"});
            }
        }
    }//GEN-LAST:event_SemiTono1ActionPerformed

    private void GenerarEscalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerarEscalaActionPerformed
        if (x != 1) {
            generada = 1;

            TextEscala.setText("Escala Propia");
            int y = 1;

            GenerarEscala.setVisible(false);
            Generar.setVisible(false);

            for (int i = 0; i < x; i++) {
                String nombreColumna = y + "°";
                notas.addColumn(nombreColumna);
                y += 1;
            }

            String[][] todasLasEscalas = new String[12][];

            for (int notaIndex = 0; notaIndex < 12; notaIndex++) {
                Nota[] notas = {
                    new Nota(1, "DO"),
                    new Nota(2, "Do#"),
                    new Nota(3, "RE"),
                    new Nota(4, "RE#"),
                    new Nota(5, "MI"),
                    new Nota(6, "FA"),
                    new Nota(7, "FA#"),
                    new Nota(8, "SOL"),
                    new Nota(9, "SOL#"),
                    new Nota(10, "LA"),
                    new Nota(11, "LA#"),
                    new Nota(12, "SI")
                };

                List<Integer> escalaprog = progresion != null ? progresion : Arrays.asList(2, 2, 1, 2, 2, 2, 1); // Default mayor
                List<Nota> notasList = Arrays.asList(notas);
                String notaInicial = notas[notaIndex].getNombre();
                todasLasEscalas[notaIndex] = escalaGenerada(notasList, notaInicial, escalaprog);
            }

            for (String[] escalaGenerada : todasLasEscalas) {
                if (escalaGenerada != null) {
                    notas.addRow(escalaGenerada);
                }
            }
        }
    }//GEN-LAST:event_GenerarEscalaActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        new GeneradorEscalas().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ResetActionPerformed

    private void GenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerarActionPerformed

        int escala = jComboBox1.getSelectedIndex();
        generada = 1;

        while (secuencia.getRowCount() > 0) {
            secuencia.removeRow(0);
        }
        if (escala == 0) {
            x = 8;
            progresion = Arrays.asList(2, 2, 1, 2, 2, 2, 1);
            TextEscala.setText("Escala Mayor");
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"SemiTono"});
        } else if (escala == 1) {
            x = 8;
            progresion = Arrays.asList(2, 1, 2, 2, 1, 2, 2);
            TextEscala.setText("Escala Menor");
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"Tono"});
        } else if (escala == 2) {
            x = 7;
            progresion = Arrays.asList(2, 3, 2, 1, 1, 3, 1);
            TextEscala.setText("Escala Blues");
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"Tono y Medio"});
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"Tono y Medio"});
            secuencia.addRow(new Object[]{"SemiTono"});
        } else if (escala == 3) {
            x = 13;
            progresion = Arrays.asList(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
            TextEscala.setText("Escala Cromatica");
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"SemiTono"});
        } else if (escala == 4) {
            x = 6;
            progresion = Arrays.asList(2, 2, 3, 2, 3, 2);
            TextEscala.setText("Escala Pentatonica");
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"Tono y Medio"});
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"Tono y Medio"});
            secuencia.addRow(new Object[]{"Tono"});
        } else if (escala == 5) {
            x = 8;
            progresion = Arrays.asList(2, 1, 2, 2, 1, 3, 1);
            TextEscala.setText("Escala Armonica");
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"Tono"});
            secuencia.addRow(new Object[]{"SemiTono"});
            secuencia.addRow(new Object[]{"Tono y Medio"});
            secuencia.addRow(new Object[]{"SemiTono"});
        }
        int y = 1;

        GenerarEscala.setVisible(false);
        Generar.setVisible(false);

        for (int i = 0; i < x; i++) {
            String nombreColumna = y + "°";
            notas.addColumn(nombreColumna);
            y += 1;
        }

        String[][] todasLasEscalas = new String[12][];

        for (int notaIndex = 0; notaIndex < 12; notaIndex++) {
            Nota[] notas = {
                new Nota(1, "DO"),
                new Nota(2, "Do#"),
                new Nota(3, "RE"),
                new Nota(4, "RE#"),
                new Nota(5, "MI"),
                new Nota(6, "FA"),
                new Nota(7, "FA#"),
                new Nota(8, "SOL"),
                new Nota(9, "SOL#"),
                new Nota(10, "LA"),
                new Nota(11, "LA#"),
                new Nota(12, "SI")
            };

            List<Integer> escalaprog = progresion != null ? progresion : Arrays.asList(2, 2, 1, 2, 2, 2, 1); // Default mayor
            List<Nota> notasList = Arrays.asList(notas);
            String notaInicial = notas[notaIndex].getNombre();
            todasLasEscalas[notaIndex] = escalaGenerada(notasList, notaInicial, escalaprog);
        }

        for (String[] escalaGenerada : todasLasEscalas) {
            if (escalaGenerada != null) {
                notas.addRow(escalaGenerada);
            }
        }


    }//GEN-LAST:event_GenerarActionPerformed

    private void Tono1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tono1ActionPerformed
        if (generada == 0) {
            if (x < 13) {
                x += 1;
                progresion.add(2);
                secuencia.addRow(new Object[]{"Tono"});
            }
        }
    }//GEN-LAST:event_Tono1ActionPerformed

    private void TonoMedio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TonoMedio1ActionPerformed
        if (generada == 0) {
            if (x < 13) {
                x += 1;
                progresion.add(3);
                secuencia.addRow(new Object[]{"Tono y Medio"});
            }
        }
    }//GEN-LAST:event_TonoMedio1ActionPerformed

    private void Tono2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tono2ActionPerformed
        if (generada == 0) {
            if (x < 13) {
                x += 1;
                progresion.add(4);
                secuencia.addRow(new Object[]{"2 Tonos"});
            }
        }
    }//GEN-LAST:event_Tono2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneradorEscalas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneradorEscalas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneradorEscalas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneradorEscalas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneradorEscalas().setVisible(true);
            }
        });
    }

    public static String[] escalaGenerada(List<Nota> notas, String notaInicial, List<Integer> progresion) {
        String[] escala = new String[progresion.size() + 1];

        int posInicial = -1;
        for (Nota nota : notas) {
            if (nota.getNombre().equalsIgnoreCase(notaInicial)) {
                posInicial = nota.getNumero() - 1;
                break;
            }
        }

        if (posInicial == -1) {
            return null;
        }

        escala[0] = notas.get(posInicial).getNombre();
        int posicionActual = posInicial;
        for (int i = 0; i < progresion.size(); i++) {
            posicionActual += progresion.get(i);
            if (posicionActual >= notas.size()) {
                posicionActual -= notas.size();
            }
            escala[i + 1] = notas.get(posicionActual).getNombre();
        }

        return escala;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Generar;
    private javax.swing.JButton GenerarEscala;
    private javax.swing.JLabel LabelWallpaper;
    private javax.swing.JButton Reset;
    private javax.swing.JButton SemiTono1;
    private javax.swing.JTable TableNotas;
    private javax.swing.JTable TableSecuencia;
    private javax.swing.JTextField TextEscala;
    private javax.swing.JButton Tono1;
    private javax.swing.JButton Tono2;
    private javax.swing.JButton TonoMedio1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
